{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\nexport class UsingJoinTableOnlyOnOneSideAllowedError extends TypeORMError {\n  constructor(entityMetadata, relation) {\n    super(`Using JoinTable is allowed only on one side of the many-to-many relationship. ` + `Both ${entityMetadata.name}#${relation.propertyName} and ${relation.inverseEntityMetadata.name}#${relation.inverseRelation.propertyName} ` + `has JoinTable decorators. Choose one of them and left JoinColumn decorator only on it.`);\n  }\n}","map":{"version":3,"names":["TypeORMError","UsingJoinTableOnlyOnOneSideAllowedError","constructor","entityMetadata","relation","name","propertyName","inverseEntityMetadata","inverseRelation"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/error/UsingJoinTableOnlyOnOneSideAllowedError.js"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\";\nexport class UsingJoinTableOnlyOnOneSideAllowedError extends TypeORMError {\n    constructor(entityMetadata, relation) {\n        super(`Using JoinTable is allowed only on one side of the many-to-many relationship. ` +\n            `Both ${entityMetadata.name}#${relation.propertyName} and ${relation.inverseEntityMetadata.name}#${relation.inverseRelation.propertyName} ` +\n            `has JoinTable decorators. Choose one of them and left JoinColumn decorator only on it.`);\n    }\n}\n\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C,OAAO,MAAMC,uCAAuC,SAASD,YAAY,CAAC;EACtEE,WAAWA,CAACC,cAAc,EAAEC,QAAQ,EAAE;IAClC,KAAK,CAAE,gFAA+E,GACjF,QAAOD,cAAc,CAACE,IAAK,IAAGD,QAAQ,CAACE,YAAa,QAAOF,QAAQ,CAACG,qBAAqB,CAACF,IAAK,IAAGD,QAAQ,CAACI,eAAe,CAACF,YAAa,GAAE,GAC1I,wFAAuF,CAAC;EACjG;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when a version check on an object that uses optimistic locking through a version field fails.\n */\nexport class OptimisticLockVersionMismatchError extends TypeORMError {\n  constructor(entity, expectedVersion, actualVersion) {\n    super(`The optimistic lock on entity ${entity} failed, version ${expectedVersion} was expected, but is actually ${actualVersion}.`);\n  }\n}","map":{"version":3,"names":["TypeORMError","OptimisticLockVersionMismatchError","constructor","entity","expectedVersion","actualVersion"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/error/OptimisticLockVersionMismatchError.js"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when a version check on an object that uses optimistic locking through a version field fails.\n */\nexport class OptimisticLockVersionMismatchError extends TypeORMError {\n    constructor(entity, expectedVersion, actualVersion) {\n        super(`The optimistic lock on entity ${entity} failed, version ${expectedVersion} was expected, but is actually ${actualVersion}.`);\n    }\n}\n\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C;AACA;AACA;AACA,OAAO,MAAMC,kCAAkC,SAASD,YAAY,CAAC;EACjEE,WAAWA,CAACC,MAAM,EAAEC,eAAe,EAAEC,aAAa,EAAE;IAChD,KAAK,CAAE,iCAAgCF,MAAO,oBAAmBC,eAAgB,kCAAiCC,aAAc,GAAE,CAAC;EACvI;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
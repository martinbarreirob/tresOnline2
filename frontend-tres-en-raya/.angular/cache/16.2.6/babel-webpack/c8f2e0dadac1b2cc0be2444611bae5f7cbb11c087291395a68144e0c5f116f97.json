{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../game.service\";\nimport * as i2 from \"@angular/common\";\nfunction ListGamesComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const game_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" Partida ID: \", game_r1.id, \" - Jugador X: \", game_r1.playerXId, \" - Jugador O: \", game_r1.playerOId, \" - Estado: \", game_r1.status, \" \");\n  }\n}\nexport class ListGamesComponent {\n  constructor(gameService) {\n    this.gameService = gameService;\n    this.games = []; // Mejor tipar esto con una interfaz si la tienes\n  }\n\n  ngOnInit() {\n    this.gameService.getAllGames().subscribe(data => {\n      this.games = data;\n    });\n  }\n  static #_ = this.ɵfac = function ListGamesComponent_Factory(t) {\n    return new (t || ListGamesComponent)(i0.ɵɵdirectiveInject(i1.GameService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListGamesComponent,\n    selectors: [[\"app-list-games\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function ListGamesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Lista de Partidas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\");\n        i0.ɵɵtemplate(3, ListGamesComponent_li_3_Template, 2, 4, \"li\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.games);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate4","game_r1","id","playerXId","playerOId","status","ListGamesComponent","constructor","gameService","games","ngOnInit","getAllGames","subscribe","data","_","ɵɵdirectiveInject","i1","GameService","_2","selectors","decls","vars","consts","template","ListGamesComponent_Template","rf","ctx","ɵɵtemplate","ListGamesComponent_li_3_Template","ɵɵproperty"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\list-games\\list-games.component.ts","C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\list-games\\list-games.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GameService } from '../game.service';\n\n@Component({\n  selector: 'app-list-games',\n  templateUrl: './list-games.component.html',\n  styleUrls: ['./list-games.component.css']\n})\nexport class ListGamesComponent implements OnInit {\n  games: any[] = []; // Mejor tipar esto con una interfaz si la tienes\n\n  constructor(private gameService: GameService) {}\n\n  ngOnInit(): void {\n    this.gameService.getAllGames().subscribe(data => {\n      this.games = data;\n    });\n  }\n}\n","<h2>Lista de Partidas</h2>\n\n<ul>\n  <li *ngFor=\"let game of games\">\n    Partida ID: {{ game.id }} - Jugador X: {{ game.playerXId }} - Jugador O: {{ game.playerOId }} - Estado: {{ game.status }}\n  </li>\n</ul>\n"],"mappings":";;;;;ICGEA,EAAA,CAAAC,cAAA,SAA+B;IAC7BD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADHH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,kBAAAC,OAAA,CAAAC,EAAA,oBAAAD,OAAA,CAAAE,SAAA,oBAAAF,OAAA,CAAAG,SAAA,iBAAAH,OAAA,CAAAI,MAAA,MACF;;;ADGF,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,KAAK,GAAU,EAAE,CAAC,CAAC;EAE4B;;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC9C,IAAI,CAACJ,KAAK,GAAGI,IAAI;IACnB,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBATUR,kBAAkB,EAAAX,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBZ,kBAAkB;IAAAa,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/B9B,EAAA,CAAAC,cAAA,SAAI;QAAAD,EAAA,CAAAE,MAAA,wBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAE1BH,EAAA,CAAAC,cAAA,SAAI;QACFD,EAAA,CAAAgC,UAAA,IAAAC,gCAAA,gBAEK;QACPjC,EAAA,CAAAG,YAAA,EAAK;;;QAHkBH,EAAA,CAAAI,SAAA,GAAQ;QAARJ,EAAA,CAAAkC,UAAA,YAAAH,GAAA,CAAAjB,KAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
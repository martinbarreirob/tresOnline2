{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(socketService) {\n    this.socketService = socketService;\n    this.title = 'frontend-tres-en-raya';\n    this.isRegistered = false;\n  }\n  ngOnInit() {\n    // Escuchar movimientos de otros jugadores\n    this.socketService.listenForMoves().subscribe(moveData => {\n      console.log('Movimiento recibido:', moveData);\n      // Aquí puedes actualizar tu tablero o realizar cualquier otra acción necesaria\n    });\n  }\n\n  setRegistered() {\n    this.isRegistered = true;\n  }\n  // Suponiendo que tienes una función para manejar el movimiento del jugador\n  handlePlayerMove(moveData) {\n    // Aquí puedes manejar el movimiento en tu frontend\n    // ...\n    // Luego, emites el movimiento al servidor\n    this.socketService.emitMove(moveData);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","socketService","title","isRegistered","ngOnInit","listenForMoves","subscribe","moveData","console","log","setRegistered","handlePlayerMove","emitMove","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SocketService } from './socket.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'frontend-tres-en-raya';\n  isRegistered = false;\n\n  constructor(private socketService: SocketService) {}\n\n  ngOnInit(): void {\n    // Escuchar movimientos de otros jugadores\n    this.socketService.listenForMoves().subscribe((moveData: string) => {\n      console.log('Movimiento recibido:', moveData);\n      // Aquí puedes actualizar tu tablero o realizar cualquier otra acción necesaria\n    });\n  }\n\n  setRegistered() {\n    this.isRegistered = true;\n  }\n\n  // Suponiendo que tienes una función para manejar el movimiento del jugador\n  handlePlayerMove(moveData: string): void {\n    // Aquí puedes manejar el movimiento en tu frontend\n    // ...\n\n    // Luego, emites el movimiento al servidor\n    this.socketService.emitMove(moveData);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAHjC,KAAAC,KAAK,GAAG,uBAAuB;IAC/B,KAAAC,YAAY,GAAG,KAAK;EAE+B;EAEnDC,QAAQA,CAAA;IACN;IACA,IAAI,CAACH,aAAa,CAACI,cAAc,EAAE,CAACC,SAAS,CAAEC,QAAgB,IAAI;MACjEC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC;MAC7C;IACF,CAAC,CAAC;EACJ;;EAEAG,aAAaA,CAAA;IACX,IAAI,CAACP,YAAY,GAAG,IAAI;EAC1B;EAEA;EACAQ,gBAAgBA,CAACJ,QAAgB;IAC/B;IACA;IAEA;IACA,IAAI,CAACN,aAAa,CAACW,QAAQ,CAACL,QAAQ,CAAC;EACvC;CACD;AA1BYR,YAAY,GAAAc,UAAA,EALxBf,SAAS,CAAC;EACTgB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWjB,YAAY,CA0BxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
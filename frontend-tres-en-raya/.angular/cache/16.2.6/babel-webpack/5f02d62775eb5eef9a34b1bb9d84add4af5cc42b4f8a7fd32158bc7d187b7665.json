{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../socket.service\";\nimport * as i3 from \"@angular/common\";\nfunction GameComponent_tr_9_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 7);\n    i0.ɵɵlistener(\"click\", function GameComponent_tr_9_td_1_Template_td_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const col_r3 = restoredCtx.$implicit;\n      const row_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.makeMove(row_r1, col_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r3 = ctx.$implicit;\n    const row_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.board[row_r1][col_r3], \" \");\n  }\n}\nconst _c0 = function () {\n  return [0, 1, 2];\n};\nfunction GameComponent_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, GameComponent_tr_9_td_1_Template, 2, 1, \"td\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nexport class GameComponent {\n  constructor(http, socketService) {\n    this.http = http;\n    this.socketService = socketService;\n    this.baseUrl = 'http://localhost:3000/';\n    this.board = [['', '', ''], ['', '', ''], ['', '', '']];\n    this.playerId = 0;\n    this.socketService.listen('game-updated').subscribe(game => {\n      console.log('listen update');\n    });\n  }\n  ngOnInit() {\n    let playerLocalStorage = localStorage.getItem('player');\n    if (playerLocalStorage) {\n      this.player = JSON.parse(playerLocalStorage);\n    }\n    this.http.get(`${this.baseUrl}game/playerGame/${this.player.id}`).subscribe(game => {\n      this.game = game;\n      this.board = JSON.parse(game.board);\n    });\n    this.socketService.listen('new-player').subscribe(newPlayer => {\n      this.opponent = newPlayer;\n    });\n  }\n  makeMove(row, col) {\n    switch (this.game.turn) {\n      case \"X\":\n        if (this.game.playerXid === this.player.id) {\n          this.board[row][col] = \"X\";\n          let boardString = JSON.stringify(this.board);\n          this.updateBoard(boardString, 'O');\n        }\n        break;\n      case \"O\":\n        if (this.game.playerOid === this.player.id) {\n          this.board[row][col] = \"O\";\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  updateBoard(board, turn) {\n    console.log('entrando update');\n    const gameData = {\n      board: board,\n      turn: turn\n    };\n    this.http.put(`${this.baseUrl}game/${this.game.id}`, gameData).subscribe(updateGame => {\n      console.log('update');\n      this.socketService.emit(\"game-updated\", updateGame);\n    }, error => {\n      console.error('Error al actualizar el juego:', error); // <-- Agrega esta línea\n    });\n  }\n  static #_ = this.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SocketService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    decls: 10,\n    vars: 4,\n    consts: [[1, \"game-container\"], [1, \"player-section\", \"bg-blue\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"player-section\", \"bg-purple\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"board-container\"], [1, \"tres-en-raya\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"h1\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"table\", 4);\n        i0.ɵɵtemplate(9, GameComponent_tr_9_Template, 2, 2, \"tr\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.player.nombre);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.opponent == null ? null : ctx.opponent.nombre);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(3, _c0));\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\".game-container[_ngcontent-%COMP%] {\\n  position: relative; \\n\\n  display: flex;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\n\\n.player-section[_ngcontent-%COMP%] {\\n  flex: 1;\\n  font-size: 2em;\\n}\\n\\n.bg-blue[_ngcontent-%COMP%] {\\n  background-color: rgb(75, 78, 79);\\n}\\n\\n.bg-purple[_ngcontent-%COMP%] {\\n  background-color: rgb(67, 59, 52);\\n}\\n\\n\\n\\n.board-container[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 50vmin; \\n\\n  height: 50vmin; \\n\\n  transform: translate(-50%, -50%); \\n\\n  background-color: white;\\n  border-radius: 10px; \\n\\n  padding: 20px; \\n\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); \\n\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  border-collapse: collapse;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border: 1px solid black;\\n  width: 33.33%;\\n  height: 33.33%;\\n  text-align: center;\\n  font-size: 1.5em;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:first-child   td[_ngcontent-%COMP%] {\\n  border-top: none;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child   td[_ngcontent-%COMP%] {\\n  border-bottom: none;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child {\\n  border-left: none;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child {\\n  border-right: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0IsRUFBRSxzQ0FBc0M7RUFDMUQsYUFBYTtFQUNiLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxPQUFPO0VBQ1AsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLGlDQUFpQztBQUNuQzs7QUFFQSw0QkFBNEI7QUFDNUI7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCxhQUFhLEVBQUUsNERBQTREO0VBQzNFLGNBQWMsRUFBRSw2REFBNkQ7RUFDN0UsZ0NBQWdDLEVBQUUsMkJBQTJCO0VBQzdELHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBRSx5QkFBeUI7RUFDOUMsYUFBYSxFQUFFLHNCQUFzQjtFQUNyQyx1Q0FBdUMsRUFBRSxvQ0FBb0M7QUFDL0U7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2IsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIuZ2FtZS1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgLyogUGFyYSBwb3NpY2lvbmFyIGVsIHRhYmxlcm8gZW5jaW1hICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5wbGF5ZXItc2VjdGlvbiB7XHJcbiAgZmxleDogMTtcclxuICBmb250LXNpemU6IDJlbTtcclxufVxyXG5cclxuLmJnLWJsdWUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig3NSwgNzgsIDc5KTtcclxufVxyXG5cclxuLmJnLXB1cnBsZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDY3LCA1OSwgNTIpO1xyXG59XHJcblxyXG4vKiBFc3RpbG9zIHBhcmEgZWwgdGFibGVybyAqL1xyXG4uYm9hcmQtY29udGFpbmVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHdpZHRoOiA1MHZtaW47IC8qIEFuY2hvIGJhc2FkbyBlbiBsYSBkaW1lbnNpw4PCs24gbcODwqFzIHBlcXVlw4PCsWEgZGUgbGEgcGFudGFsbGEgKi9cclxuICBoZWlnaHQ6IDUwdm1pbjsgLyogQWx0dXJhIGJhc2FkYSBlbiBsYSBkaW1lbnNpw4PCs24gbcODwqFzIHBlcXVlw4PCsWEgZGUgbGEgcGFudGFsbGEgKi9cclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgLyogQ2VudHJhciBlbiBsYSBwYW50YWxsYSAqL1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7IC8qIEVzcXVpbmFzIHJlZG9uZGVhZGFzICovXHJcbiAgcGFkZGluZzogMjBweDsgLyogRXNwYWNpYWRvIGludGVybm8gKi9cclxuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7IC8qIFNvbWJyYSBwYXJhIGRhciBlZmVjdG8gZmxvdGFudGUgKi9cclxufVxyXG5cclxuLnRyZXMtZW4tcmF5YSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbn1cclxuXHJcbi50cmVzLWVuLXJheWEgdGQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIHdpZHRoOiAzMy4zMyU7XHJcbiAgaGVpZ2h0OiAzMy4zMyU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMS41ZW07XHJcbn1cclxuXHJcbi50cmVzLWVuLXJheWEgdHI6Zmlyc3QtY2hpbGQgdGQge1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbn1cclxuXHJcbi50cmVzLWVuLXJheWEgdHI6bGFzdC1jaGlsZCB0ZCB7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxufVxyXG5cclxuLnRyZXMtZW4tcmF5YSB0ZDpmaXJzdC1jaGlsZCB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbn1cclxuXHJcbi50cmVzLWVuLXJheWEgdGQ6bGFzdC1jaGlsZCB7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","GameComponent_tr_9_td_1_Template_td_click_0_listener","restoredCtx","ɵɵrestoreView","_r6","col_r3","$implicit","row_r1","ɵɵnextContext","ctx_r4","ɵɵresetView","makeMove","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","board","ɵɵtemplate","GameComponent_tr_9_td_1_Template","ɵɵproperty","ɵɵpureFunction0","_c0","GameComponent","constructor","http","socketService","baseUrl","playerId","listen","subscribe","game","console","log","ngOnInit","playerLocalStorage","localStorage","getItem","player","JSON","parse","get","id","newPlayer","opponent","row","col","turn","playerXid","boardString","stringify","updateBoard","playerOid","gameData","put","updateGame","emit","error","_","ɵɵdirectiveInject","i1","HttpClient","i2","SocketService","_2","selectors","decls","vars","consts","template","GameComponent_Template","rf","ctx","GameComponent_tr_9_Template","ɵɵtextInterpolate","nombre"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\game\\game.component.ts","C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\game\\game.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { SocketService } from '../socket.service'; // Asegúrate de importar tu servicio\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Player, Game } from '../models/interfaces.model';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n  private baseUrl: string = 'http://localhost:3000/';\r\n  board: string[][] = [\r\n    ['', '', ''],\r\n    ['', '', ''],\r\n    ['', '', '']\r\n  ];\r\n  player: any;\r\n  playerId: number = 0;\r\n  game: any;\r\n  opponent: any;\r\n\r\n  constructor (private http: HttpClient, private socketService: SocketService){\r\n    this.socketService.listen('game-updated').subscribe(game =>{\r\n      console.log('listen update');\r\n\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void{\r\n    let playerLocalStorage = localStorage.getItem('player');\r\n    if(playerLocalStorage){\r\n      this.player = JSON.parse(playerLocalStorage);\r\n\r\n    }\r\n    this.http.get<Game>(`${this.baseUrl}game/playerGame/${this.player.id}`).subscribe((game)=>{\r\n      this.game = game;\r\n      this.board = JSON.parse(game.board);\r\n    })\r\n\r\n    this.socketService.listen('new-player').subscribe(newPlayer => {\r\n      this.opponent = newPlayer;\r\n    });\r\n  }\r\n\r\n\r\n  makeMove(row: number, col: number): void{\r\n    switch(this.game.turn){\r\n      case \"X\":\r\n        if(this.game.playerXid === this.player.id){\r\n          this.board[row][col] = \"X\"\r\n          let boardString = JSON.stringify(this.board);\r\n\r\n          this.updateBoard(boardString, 'O');\r\n        }\r\n        break;\r\n      case \"O\":\r\n        if(this.game.playerOid === this.player.id){\r\n          this.board[row][col] = \"O\"\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  updateBoard(board: string, turn: string){\r\n    console.log('entrando update');\r\n\r\n    const gameData = {\r\n      board: board,\r\n      turn: turn,\r\n    }\r\n\r\n    this.http.put<Game>(`${this.baseUrl}game/${this.game.id}`, gameData).subscribe(\r\n      updateGame => {\r\n        console.log('update')\r\n        this.socketService.emit(\"game-updated\", updateGame);\r\n\r\n      },\r\n      error => {\r\n        console.error('Error al actualizar el juego:', error); // <-- Agrega esta línea\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","<!-- <h1>MESA</h1>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col\">\r\n    <h2>{{ player.nombre }}</h2>\r\n  </div>\r\n  <div class=\"col\">\r\n    <h2>{{ opponent?.nombre }}</h2>\r\n  </div>\r\n</div>\r\n<table class=\"game-board m-5\">\r\n  <tr *ngFor=\"let row of [0, 1, 2]\">\r\n    <td *ngFor=\"let col of [0, 1, 2]\" (click)=\"makeMove(row, col)\">\r\n      {{ board[row][col] }}\r\n    </td>\r\n  </tr>\r\n</table> -->\r\n\r\n\r\n<div class=\"game-container\">\r\n  <div class=\"player-section bg-blue d-flex align-items-center justify-content-center\">\r\n      <h1>{{ player.nombre }}</h1>\r\n  </div>\r\n\r\n\r\n\r\n  <div class=\"player-section bg-purple d-flex align-items-center justify-content-center\">\r\n      <h1>{{ opponent?.nombre }}</h1>\r\n  </div>\r\n\r\n  <div class=\"board-container\">\r\n    <table class=\"tres-en-raya\">\r\n      <tr *ngFor=\"let row of [0, 1, 2]\">\r\n        <td *ngFor=\"let col of [0, 1, 2]\" (click)=\"makeMove(row, col)\">\r\n          {{ board[row][col] }}\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
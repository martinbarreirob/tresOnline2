{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when the per-migration transaction mode is overriden but the global transaction mode is set to \"all\".\n */\nexport class ForbiddenTransactionModeOverrideError extends TypeORMError {\n  constructor(migrationsOverridingTransactionMode) {\n    const migrationNames = migrationsOverridingTransactionMode.map(migration => `\"${migration.name}\"`);\n    super(`Migrations ${migrationNames.join(\", \")} override the transaction mode, but the global transaction mode is \"all\"`);\n  }\n}","map":{"version":3,"names":["TypeORMError","ForbiddenTransactionModeOverrideError","constructor","migrationsOverridingTransactionMode","migrationNames","map","migration","name","join"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/error/ForbiddenTransactionModeOverrideError.js"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when the per-migration transaction mode is overriden but the global transaction mode is set to \"all\".\n */\nexport class ForbiddenTransactionModeOverrideError extends TypeORMError {\n    constructor(migrationsOverridingTransactionMode) {\n        const migrationNames = migrationsOverridingTransactionMode.map((migration) => `\"${migration.name}\"`);\n        super(`Migrations ${migrationNames.join(\", \")} override the transaction mode, but the global transaction mode is \"all\"`);\n    }\n}\n\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C;AACA;AACA;AACA,OAAO,MAAMC,qCAAqC,SAASD,YAAY,CAAC;EACpEE,WAAWA,CAACC,mCAAmC,EAAE;IAC7C,MAAMC,cAAc,GAAGD,mCAAmC,CAACE,GAAG,CAAEC,SAAS,IAAM,IAAGA,SAAS,CAACC,IAAK,GAAE,CAAC;IACpG,KAAK,CAAE,cAAaH,cAAc,CAACI,IAAI,CAAC,IAAI,CAAE,0EAAyE,CAAC;EAC5H;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when ORM cannot get method parameter's type.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nexport class CannotReflectMethodParameterTypeError extends TypeORMError {\n  constructor(target, methodName) {\n    super(`Cannot get reflected type for a \"${methodName}\" method's parameter of \"${target.name}\" class. ` + `Make sure you have turned on an \"emitDecoratorMetadata\": true option in tsconfig.json. ` + `Also make sure you have imported \"reflect-metadata\" on top of the main entry file in your application.`);\n  }\n}","map":{"version":3,"names":["TypeORMError","CannotReflectMethodParameterTypeError","constructor","target","methodName","name"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/error/CannotReflectMethodParameterTypeError.js"],"sourcesContent":["import { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when ORM cannot get method parameter's type.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nexport class CannotReflectMethodParameterTypeError extends TypeORMError {\n    constructor(target, methodName) {\n        super(`Cannot get reflected type for a \"${methodName}\" method's parameter of \"${target.name}\" class. ` +\n            `Make sure you have turned on an \"emitDecoratorMetadata\": true option in tsconfig.json. ` +\n            `Also make sure you have imported \"reflect-metadata\" on top of the main entry file in your application.`);\n    }\n}\n\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C;AACA;AACA;AACA;AACA,OAAO,MAAMC,qCAAqC,SAASD,YAAY,CAAC;EACpEE,WAAWA,CAACC,MAAM,EAAEC,UAAU,EAAE;IAC5B,KAAK,CAAE,oCAAmCA,UAAW,4BAA2BD,MAAM,CAACE,IAAK,WAAU,GACjG,yFAAwF,GACxF,wGAAuG,CAAC;EACjH;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataViewerComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://192.168.0.42:3000/'; // URL de tu backend para el recurso game\n    this.games = []; // Aquí almacenaremos la lista de juegos\n  }\n\n  ngOnInit() {\n    this.fetchAllGames();\n    this.fetchGameById(1);\n    this.fetchPlayerById(1);\n  }\n  fetchAllGames() {\n    this.http.get(`${this.baseUrl}game`).subscribe(data => {\n      console.log('Datos recibidos del backend:', data);\n      this.games = data;\n    }, error => {\n      console.error('Error al obtener datos:', error);\n    });\n  }\n  // Si necesitas obtener un juego específico por su ID:\n  fetchGameById(id) {\n    this.http.get(`${this.baseUrl}game/${id}`).subscribe(data => {\n      console.log(`Datos del juego con ID ${id}:`, data);\n    }, error => {\n      console.error(`Error al obtener el juego con ID ${id}:`, error);\n    });\n  }\n  fetchPlayerById(id) {\n    this.http.get(`${this.baseUrl}player/${id}`).subscribe(data => {\n      console.log(`Datos del juego con ID ${id}:`, data);\n    }, error => {\n      console.error(`Error al obtener el juego con ID ${id}:`, error);\n    });\n  }\n  static #_ = this.ɵfac = function DataViewerComponent_Factory(t) {\n    return new (t || DataViewerComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataViewerComponent,\n    selectors: [[\"app-data-viewer\"]],\n    decls: 2,\n    vars: 0,\n    template: function DataViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"data-viewer works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DataViewerComponent","constructor","http","baseUrl","games","ngOnInit","fetchAllGames","fetchGameById","fetchPlayerById","get","subscribe","data","console","log","error","id","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","template","DataViewerComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\data-viewer\\data-viewer.component.ts","C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\data-viewer\\data-viewer.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Game, Player } from '../models/interfaces.model'\r\n\r\n@Component({\r\n  selector: 'app-data-viewer',\r\n  templateUrl: './data-viewer.component.html',\r\n  styleUrls: ['./data-viewer.component.css']\r\n})\r\nexport class DataViewerComponent implements OnInit {\r\n\r\n  private baseUrl = 'http://192.168.0.42:3000/'; // URL de tu backend para el recurso game\r\n\r\n  games: Game[] = []; // Aquí almacenaremos la lista de juegos\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchAllGames();\r\n    this.fetchGameById(1);\r\n    this.fetchPlayerById(1);\r\n  }\r\n\r\n  fetchAllGames(): void {\r\n    this.http.get<Game[]>(`${this.baseUrl}game`).subscribe(\r\n      data => {\r\n        console.log('Datos recibidos del backend:', data);\r\n        this.games = data;\r\n      },\r\n      error => {\r\n        console.error('Error al obtener datos:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Si necesitas obtener un juego específico por su ID:\r\n  fetchGameById(id: number): void {\r\n    this.http.get<Game>(`${this.baseUrl}game/${id}`).subscribe(\r\n      data => {\r\n        console.log(`Datos del juego con ID ${id}:`, data);\r\n      },\r\n      error => {\r\n        console.error(`Error al obtener el juego con ID ${id}:`, error);\r\n      }\r\n    );\r\n  }\r\n\r\n  fetchPlayerById(id: number): void {\r\n    this.http.get<Player>(`${this.baseUrl}player/${id}`).subscribe(\r\n      data => {\r\n        console.log(`Datos del juego con ID ${id}:`, data);\r\n      },\r\n      error => {\r\n        console.error(`Error al obtener el juego con ID ${id}:`, error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // ... Puedes agregar más métodos aquí si necesitas interactuar con otros endpoints (crear, actualizar, eliminar).\r\n\r\n}\r\n\r\n// Puedes definir una interfaz para el tipo Game si aún no la tienes en otro lugar\r\n","<p>data-viewer works!</p>\r\n"],"mappings":";;AASA,OAAM,MAAOA,mBAAmB;EAM9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,OAAO,GAAG,2BAA2B,CAAC,CAAC;IAE/C,KAAAC,KAAK,GAAW,EAAE,CAAC,CAAC;EAEoB;;EAExCC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC;IACrB,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;EACzB;EAEAF,aAAaA,CAAA;IACX,IAAI,CAACJ,IAAI,CAACO,GAAG,CAAS,GAAG,IAAI,CAACN,OAAO,MAAM,CAAC,CAACO,SAAS,CACpDC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAAC;MACjD,IAAI,CAACP,KAAK,GAAGO,IAAI;IACnB,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAEA;EACAP,aAAaA,CAACQ,EAAU;IACtB,IAAI,CAACb,IAAI,CAACO,GAAG,CAAO,GAAG,IAAI,CAACN,OAAO,QAAQY,EAAE,EAAE,CAAC,CAACL,SAAS,CACxDC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAAC,0BAA0BE,EAAE,GAAG,EAAEJ,IAAI,CAAC;IACpD,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,oCAAoCC,EAAE,GAAG,EAAED,KAAK,CAAC;IACjE,CAAC,CACF;EACH;EAEAN,eAAeA,CAACO,EAAU;IACxB,IAAI,CAACb,IAAI,CAACO,GAAG,CAAS,GAAG,IAAI,CAACN,OAAO,UAAUY,EAAE,EAAE,CAAC,CAACL,SAAS,CAC5DC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAAC,0BAA0BE,EAAE,GAAG,EAAEJ,IAAI,CAAC;IACpD,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,oCAAoCC,EAAE,GAAG,EAAED,KAAK,CAAC;IACjE,CAAC,CACF;EACH;EAAC,QAAAE,CAAA,G;qBA/CUhB,mBAAmB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBrB,mBAAmB;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCThCV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,yBAAkB;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
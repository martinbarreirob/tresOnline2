{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * JoinTable decorator is used in many-to-many relationship to specify owner side of relationship.\n * Its also used to set a custom junction table's name, column names and referenced columns.\n */\nexport function JoinTable(options) {\n  return function (object, propertyName) {\n    options = options || {};\n    getMetadataArgsStorage().joinTables.push({\n      target: object.constructor,\n      propertyName: propertyName,\n      name: options.name,\n      joinColumns: options && options.joinColumn ? [options.joinColumn] : options.joinColumns,\n      inverseJoinColumns: options && options.inverseJoinColumn ? [options.inverseJoinColumn] : options.inverseJoinColumns,\n      schema: options && options.schema ? options.schema : undefined,\n      database: options && options.database ? options.database : undefined,\n      synchronize: !(options && options.synchronize === false)\n    });\n  };\n}","map":{"version":3,"names":["getMetadataArgsStorage","JoinTable","options","object","propertyName","joinTables","push","target","constructor","name","joinColumns","joinColumn","inverseJoinColumns","inverseJoinColumn","schema","undefined","database","synchronize"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/decorator/relations/JoinTable.js"],"sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * JoinTable decorator is used in many-to-many relationship to specify owner side of relationship.\n * Its also used to set a custom junction table's name, column names and referenced columns.\n */\nexport function JoinTable(options) {\n    return function (object, propertyName) {\n        options =\n            options ||\n                {};\n        getMetadataArgsStorage().joinTables.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            name: options.name,\n            joinColumns: (options && options.joinColumn\n                ? [options.joinColumn]\n                : options\n                    .joinColumns),\n            inverseJoinColumns: (options &&\n                options.inverseJoinColumn\n                ? [options.inverseJoinColumn]\n                : options\n                    .inverseJoinColumns),\n            schema: options && options.schema ? options.schema : undefined,\n            database: options && options.database ? options.database : undefined,\n            synchronize: !(options && options.synchronize === false),\n        });\n    };\n}\n\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,eAAe;AACtD;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,OAAO,EAAE;EAC/B,OAAO,UAAUC,MAAM,EAAEC,YAAY,EAAE;IACnCF,OAAO,GACHA,OAAO,IACH,CAAC,CAAC;IACVF,sBAAsB,CAAC,CAAC,CAACK,UAAU,CAACC,IAAI,CAAC;MACrCC,MAAM,EAAEJ,MAAM,CAACK,WAAW;MAC1BJ,YAAY,EAAEA,YAAY;MAC1BK,IAAI,EAAEP,OAAO,CAACO,IAAI;MAClBC,WAAW,EAAGR,OAAO,IAAIA,OAAO,CAACS,UAAU,GACrC,CAACT,OAAO,CAACS,UAAU,CAAC,GACpBT,OAAO,CACJQ,WAAY;MACrBE,kBAAkB,EAAGV,OAAO,IACxBA,OAAO,CAACW,iBAAiB,GACvB,CAACX,OAAO,CAACW,iBAAiB,CAAC,GAC3BX,OAAO,CACJU,kBAAmB;MAC5BE,MAAM,EAAEZ,OAAO,IAAIA,OAAO,CAACY,MAAM,GAAGZ,OAAO,CAACY,MAAM,GAAGC,SAAS;MAC9DC,QAAQ,EAAEd,OAAO,IAAIA,OAAO,CAACc,QAAQ,GAAGd,OAAO,CAACc,QAAQ,GAAGD,SAAS;MACpEE,WAAW,EAAE,EAAEf,OAAO,IAAIA,OAAO,CAACe,WAAW,KAAK,KAAK;IAC3D,CAAC,CAAC;EACN,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../socket.service\";\nimport * as i3 from \"@angular/forms\";\nexport let LoggingComponent = /*#__PURE__*/(() => {\n  class LoggingComponent {\n    constructor(http, socketService) {\n      this.http = http;\n      this.socketService = socketService;\n      this.emitRegistered = new EventEmitter();\n      this.baseUrl = 'http://192.168.0.42:3000/';\n      this.inputNombre = '';\n      this.socket = this.socketService;\n    }\n    ngOnInit() {}\n    registroUser() {\n      if (this.inputNombre === '') {\n        this.inputNombre = 'user';\n      }\n      this.insertPlayer(this.inputNombre).subscribe(player => {\n        localStorage.setItem('player', JSON.stringify(player));\n        this.searchForGame().subscribe(freeGame => {\n          if (freeGame) {\n            let enterFreeGame = {\n              playerOid: player.id,\n              status: 1\n            };\n            this.http.put(`${this.baseUrl}game/${freeGame.id}`, enterFreeGame).subscribe(updateGame => {\n              console.log('Usuario añadido a Juego Disponible');\n              this.socket.emit(\"player-connected\", player);\n              //Oculta formulario y muestra tablero\n              this.emitRegistered.emit();\n            }, error => {\n              console.error('Error al actualizar el juego:', error); // <-- Agrega esta línea\n            });\n          } else {\n            console.log('No hay juego libre. Creando uno nuevo...');\n            this.createGame(player.id).subscribe(game => {\n              this.emitRegistered.emit();\n            });\n          }\n        });\n      });\n    }\n    insertPlayer(nombre) {\n      const nombrePlayer = {\n        nombre: nombre\n      };\n      return this.http.post(`${this.baseUrl}player/`, nombrePlayer);\n    }\n    createGame(playerId) {\n      const gameData = {\n        board: JSON.stringify([['', '', ''], ['', '', ''], ['', '', '']]),\n        status: 0,\n        playerXid: playerId,\n        playerOid: \"\",\n        turn: 'X'\n      };\n      return this.http.post(`${this.baseUrl}game/`, gameData);\n    }\n    searchForGame() {\n      return this.http.get(`${this.baseUrl}game/free`).pipe(catchError(error => {\n        //console.error('Error al buscar juego libre:', error);\n        return of(null); // Devuelve un valor nulo si ocurre un error\n      }));\n    }\n    static #_ = this.ɵfac = function LoggingComponent_Factory(t) {\n      return new (t || LoggingComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SocketService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoggingComponent,\n      selectors: [[\"app-logging\"]],\n      outputs: {\n        emitRegistered: \"emitRegistered\"\n      },\n      decls: 15,\n      vars: 1,\n      consts: [[1, \"full-height\", \"d-flex\", \"flex-column\", \"justify-content-center\"], [1, \"container\", \"text-center\"], [1, \"row\", \"mb-4\"], [1, \"col\"], [1, \"titulo\"], [1, \"row\"], [\"type\", \"text\", 1, \"form-control\", \"mb-2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n      template: function LoggingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n          i0.ɵɵtext(5, \"Tres \");\n          i0.ɵɵelement(6, \"br\");\n          i0.ɵɵtext(7, \"en\");\n          i0.ɵɵelement(8, \"br\");\n          i0.ɵɵtext(9, \" Raya\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 3)(12, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function LoggingComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.inputNombre = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function LoggingComponent_Template_button_click_13_listener() {\n            return ctx.registroUser();\n          });\n          i0.ɵɵtext(14, \"Jugar\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngModel\", ctx.inputNombre);\n        }\n      },\n      dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"[_nghost-%COMP%]{display:block;height:100%;width:100%}.full-height[_ngcontent-%COMP%]{min-height:90vh;padding:15px 0}.titulo[_ngcontent-%COMP%]{font-size:8vw;margin-bottom:20px;line-height:1.1;font-family:Montserrat,sans-serif;font-weight:600}input[type=text][_ngcontent-%COMP%]{max-width:200px;margin:0 auto}\"]\n    });\n  }\n  return LoggingComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
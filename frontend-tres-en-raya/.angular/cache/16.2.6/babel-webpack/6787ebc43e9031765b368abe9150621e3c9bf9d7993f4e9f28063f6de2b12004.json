{"ast":null,"code":"import { PlatformTools } from \"../platform/PlatformTools\";\nimport { AbstractLogger } from \"./AbstractLogger\";\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger uses console to log events and use syntax highlighting.\n */\nexport class AdvancedConsoleLogger extends AbstractLogger {\n  /**\n   * Write log to specific output.\n   */\n  writeLog(level, logMessage, queryRunner) {\n    var _a;\n    const messages = this.prepareLogMessages(logMessage);\n    for (let message of messages) {\n      switch ((_a = message.type) !== null && _a !== void 0 ? _a : level) {\n        case \"log\":\n        case \"schema-build\":\n        case \"migration\":\n          PlatformTools.log(String(message.message));\n          break;\n        case \"info\":\n        case \"query\":\n          if (message.prefix) {\n            PlatformTools.logInfo(message.prefix, message.message);\n          } else {\n            PlatformTools.log(String(message.message));\n          }\n          break;\n        case \"warn\":\n        case \"query-slow\":\n          if (message.prefix) {\n            PlatformTools.logWarn(message.prefix, message.message);\n          } else {\n            console.warn(PlatformTools.warn(String(message.message)));\n          }\n          break;\n        case \"error\":\n        case \"query-error\":\n          if (message.prefix) {\n            PlatformTools.logError(message.prefix, String(message.message));\n          } else {\n            console.error(PlatformTools.error(String(message.message)));\n          }\n          break;\n      }\n    }\n  }\n}","map":{"version":3,"names":["PlatformTools","AbstractLogger","AdvancedConsoleLogger","writeLog","level","logMessage","queryRunner","_a","messages","prepareLogMessages","message","type","log","String","prefix","logInfo","logWarn","console","warn","logError","error"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/logger/AdvancedConsoleLogger.js"],"sourcesContent":["import { PlatformTools } from \"../platform/PlatformTools\";\nimport { AbstractLogger } from \"./AbstractLogger\";\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger uses console to log events and use syntax highlighting.\n */\nexport class AdvancedConsoleLogger extends AbstractLogger {\n    /**\n     * Write log to specific output.\n     */\n    writeLog(level, logMessage, queryRunner) {\n        var _a;\n        const messages = this.prepareLogMessages(logMessage);\n        for (let message of messages) {\n            switch ((_a = message.type) !== null && _a !== void 0 ? _a : level) {\n                case \"log\":\n                case \"schema-build\":\n                case \"migration\":\n                    PlatformTools.log(String(message.message));\n                    break;\n                case \"info\":\n                case \"query\":\n                    if (message.prefix) {\n                        PlatformTools.logInfo(message.prefix, message.message);\n                    }\n                    else {\n                        PlatformTools.log(String(message.message));\n                    }\n                    break;\n                case \"warn\":\n                case \"query-slow\":\n                    if (message.prefix) {\n                        PlatformTools.logWarn(message.prefix, message.message);\n                    }\n                    else {\n                        console.warn(PlatformTools.warn(String(message.message)));\n                    }\n                    break;\n                case \"error\":\n                case \"query-error\":\n                    if (message.prefix) {\n                        PlatformTools.logError(message.prefix, String(message.message));\n                    }\n                    else {\n                        console.error(PlatformTools.error(String(message.message)));\n                    }\n                    break;\n            }\n        }\n    }\n}\n\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,cAAc,QAAQ,kBAAkB;AACjD;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,SAASD,cAAc,CAAC;EACtD;AACJ;AACA;EACIE,QAAQA,CAACC,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAE;IACrC,IAAIC,EAAE;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACJ,UAAU,CAAC;IACpD,KAAK,IAAIK,OAAO,IAAIF,QAAQ,EAAE;MAC1B,QAAQ,CAACD,EAAE,GAAGG,OAAO,CAACC,IAAI,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGH,KAAK;QAC9D,KAAK,KAAK;QACV,KAAK,cAAc;QACnB,KAAK,WAAW;UACZJ,aAAa,CAACY,GAAG,CAACC,MAAM,CAACH,OAAO,CAACA,OAAO,CAAC,CAAC;UAC1C;QACJ,KAAK,MAAM;QACX,KAAK,OAAO;UACR,IAAIA,OAAO,CAACI,MAAM,EAAE;YAChBd,aAAa,CAACe,OAAO,CAACL,OAAO,CAACI,MAAM,EAAEJ,OAAO,CAACA,OAAO,CAAC;UAC1D,CAAC,MACI;YACDV,aAAa,CAACY,GAAG,CAACC,MAAM,CAACH,OAAO,CAACA,OAAO,CAAC,CAAC;UAC9C;UACA;QACJ,KAAK,MAAM;QACX,KAAK,YAAY;UACb,IAAIA,OAAO,CAACI,MAAM,EAAE;YAChBd,aAAa,CAACgB,OAAO,CAACN,OAAO,CAACI,MAAM,EAAEJ,OAAO,CAACA,OAAO,CAAC;UAC1D,CAAC,MACI;YACDO,OAAO,CAACC,IAAI,CAAClB,aAAa,CAACkB,IAAI,CAACL,MAAM,CAACH,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC;UAC7D;UACA;QACJ,KAAK,OAAO;QACZ,KAAK,aAAa;UACd,IAAIA,OAAO,CAACI,MAAM,EAAE;YAChBd,aAAa,CAACmB,QAAQ,CAACT,OAAO,CAACI,MAAM,EAAED,MAAM,CAACH,OAAO,CAACA,OAAO,CAAC,CAAC;UACnE,CAAC,MACI;YACDO,OAAO,CAACG,KAAK,CAACpB,aAAa,CAACoB,KAAK,CAACP,MAAM,CAACH,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC;UAC/D;UACA;MACR;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
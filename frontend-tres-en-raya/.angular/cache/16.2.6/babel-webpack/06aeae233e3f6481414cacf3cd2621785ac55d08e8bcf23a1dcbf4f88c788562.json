{"ast":null,"code":"import { AbstractLogger } from \"./AbstractLogger\";\nimport { debug } from \"debug\";\n/**\n * Performs logging of the events in TypeORM via debug library.\n */\nexport class DebugLogger extends AbstractLogger {\n  constructor() {\n    super(...arguments);\n    /**\n     * Object with all debug logger.\n     */\n    this.logger = {\n      log: debug(\"typeorm:log\"),\n      info: debug(\"typeorm:info\"),\n      warn: debug(\"typeorm:warn\"),\n      error: debug(\"typeorm:error\"),\n      query: debug(\"typeorm:query:log\"),\n      \"query-error\": debug(\"typeorm:query:error\"),\n      \"query-slow\": debug(\"typeorm:query:slow\"),\n      \"schema-build\": debug(\"typeorm:schema\"),\n      migration: debug(\"typeorm:migration\")\n    };\n  }\n  /**\n   * Check is logging for level or message type is enabled.\n   */\n  isLogEnabledFor(type) {\n    switch (type) {\n      case \"query\":\n        return this.logger[\"query\"].enabled;\n      case \"query-error\":\n        return this.logger[\"query-error\"].enabled;\n      case \"query-slow\":\n        return true;\n      case \"schema\":\n      case \"schema-build\":\n        return this.logger[\"schema-build\"].enabled;\n      case \"migration\":\n        return this.logger[\"migration\"].enabled;\n      case \"log\":\n        return this.logger[\"log\"].enabled;\n      case \"info\":\n        return this.logger[\"info\"].enabled;\n      case \"warn\":\n        return this.logger[\"warn\"].enabled;\n      default:\n        return false;\n    }\n  }\n  /**\n   * Write log to specific output.\n   */\n  writeLog(level, logMessage, queryRunner) {\n    var _a;\n    const messages = this.prepareLogMessages(logMessage, {\n      appendParameterAsComment: false\n    });\n    for (let message of messages) {\n      const messageTypeOrLevel = (_a = message.type) !== null && _a !== void 0 ? _a : level;\n      if (messageTypeOrLevel in this.logger) {\n        if (message.prefix) {\n          this.logger[messageTypeOrLevel](message.prefix, message.message);\n        } else {\n          this.logger[messageTypeOrLevel](message.message);\n        }\n        if (message.parameters && message.parameters.length) {\n          this.logger[messageTypeOrLevel](\"parameters:\", message.parameters);\n        }\n      }\n    }\n  }\n}","map":{"version":3,"names":["AbstractLogger","debug","DebugLogger","constructor","arguments","logger","log","info","warn","error","query","migration","isLogEnabledFor","type","enabled","writeLog","level","logMessage","queryRunner","_a","messages","prepareLogMessages","appendParameterAsComment","message","messageTypeOrLevel","prefix","parameters","length"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/logger/DebugLogger.js"],"sourcesContent":["import { AbstractLogger } from \"./AbstractLogger\";\nimport { debug } from \"debug\";\n/**\n * Performs logging of the events in TypeORM via debug library.\n */\nexport class DebugLogger extends AbstractLogger {\n    constructor() {\n        super(...arguments);\n        /**\n         * Object with all debug logger.\n         */\n        this.logger = {\n            log: debug(\"typeorm:log\"),\n            info: debug(\"typeorm:info\"),\n            warn: debug(\"typeorm:warn\"),\n            error: debug(\"typeorm:error\"),\n            query: debug(\"typeorm:query:log\"),\n            \"query-error\": debug(\"typeorm:query:error\"),\n            \"query-slow\": debug(\"typeorm:query:slow\"),\n            \"schema-build\": debug(\"typeorm:schema\"),\n            migration: debug(\"typeorm:migration\"),\n        };\n    }\n    /**\n     * Check is logging for level or message type is enabled.\n     */\n    isLogEnabledFor(type) {\n        switch (type) {\n            case \"query\":\n                return this.logger[\"query\"].enabled;\n            case \"query-error\":\n                return this.logger[\"query-error\"].enabled;\n            case \"query-slow\":\n                return true;\n            case \"schema\":\n            case \"schema-build\":\n                return this.logger[\"schema-build\"].enabled;\n            case \"migration\":\n                return this.logger[\"migration\"].enabled;\n            case \"log\":\n                return this.logger[\"log\"].enabled;\n            case \"info\":\n                return this.logger[\"info\"].enabled;\n            case \"warn\":\n                return this.logger[\"warn\"].enabled;\n            default:\n                return false;\n        }\n    }\n    /**\n     * Write log to specific output.\n     */\n    writeLog(level, logMessage, queryRunner) {\n        var _a;\n        const messages = this.prepareLogMessages(logMessage, {\n            appendParameterAsComment: false,\n        });\n        for (let message of messages) {\n            const messageTypeOrLevel = (_a = message.type) !== null && _a !== void 0 ? _a : level;\n            if (messageTypeOrLevel in this.logger) {\n                if (message.prefix) {\n                    this.logger[messageTypeOrLevel](message.prefix, message.message);\n                }\n                else {\n                    this.logger[messageTypeOrLevel](message.message);\n                }\n                if (message.parameters && message.parameters.length) {\n                    this.logger[messageTypeOrLevel](\"parameters:\", message.parameters);\n                }\n            }\n        }\n    }\n}\n\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,KAAK,QAAQ,OAAO;AAC7B;AACA;AACA;AACA,OAAO,MAAMC,WAAW,SAASF,cAAc,CAAC;EAC5CG,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB;AACR;AACA;IACQ,IAAI,CAACC,MAAM,GAAG;MACVC,GAAG,EAAEL,KAAK,CAAC,aAAa,CAAC;MACzBM,IAAI,EAAEN,KAAK,CAAC,cAAc,CAAC;MAC3BO,IAAI,EAAEP,KAAK,CAAC,cAAc,CAAC;MAC3BQ,KAAK,EAAER,KAAK,CAAC,eAAe,CAAC;MAC7BS,KAAK,EAAET,KAAK,CAAC,mBAAmB,CAAC;MACjC,aAAa,EAAEA,KAAK,CAAC,qBAAqB,CAAC;MAC3C,YAAY,EAAEA,KAAK,CAAC,oBAAoB,CAAC;MACzC,cAAc,EAAEA,KAAK,CAAC,gBAAgB,CAAC;MACvCU,SAAS,EAAEV,KAAK,CAAC,mBAAmB;IACxC,CAAC;EACL;EACA;AACJ;AACA;EACIW,eAAeA,CAACC,IAAI,EAAE;IAClB,QAAQA,IAAI;MACR,KAAK,OAAO;QACR,OAAO,IAAI,CAACR,MAAM,CAAC,OAAO,CAAC,CAACS,OAAO;MACvC,KAAK,aAAa;QACd,OAAO,IAAI,CAACT,MAAM,CAAC,aAAa,CAAC,CAACS,OAAO;MAC7C,KAAK,YAAY;QACb,OAAO,IAAI;MACf,KAAK,QAAQ;MACb,KAAK,cAAc;QACf,OAAO,IAAI,CAACT,MAAM,CAAC,cAAc,CAAC,CAACS,OAAO;MAC9C,KAAK,WAAW;QACZ,OAAO,IAAI,CAACT,MAAM,CAAC,WAAW,CAAC,CAACS,OAAO;MAC3C,KAAK,KAAK;QACN,OAAO,IAAI,CAACT,MAAM,CAAC,KAAK,CAAC,CAACS,OAAO;MACrC,KAAK,MAAM;QACP,OAAO,IAAI,CAACT,MAAM,CAAC,MAAM,CAAC,CAACS,OAAO;MACtC,KAAK,MAAM;QACP,OAAO,IAAI,CAACT,MAAM,CAAC,MAAM,CAAC,CAACS,OAAO;MACtC;QACI,OAAO,KAAK;IACpB;EACJ;EACA;AACJ;AACA;EACIC,QAAQA,CAACC,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAE;IACrC,IAAIC,EAAE;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACC,kBAAkB,CAACJ,UAAU,EAAE;MACjDK,wBAAwB,EAAE;IAC9B,CAAC,CAAC;IACF,KAAK,IAAIC,OAAO,IAAIH,QAAQ,EAAE;MAC1B,MAAMI,kBAAkB,GAAG,CAACL,EAAE,GAAGI,OAAO,CAACV,IAAI,MAAM,IAAI,IAAIM,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGH,KAAK;MACrF,IAAIQ,kBAAkB,IAAI,IAAI,CAACnB,MAAM,EAAE;QACnC,IAAIkB,OAAO,CAACE,MAAM,EAAE;UAChB,IAAI,CAACpB,MAAM,CAACmB,kBAAkB,CAAC,CAACD,OAAO,CAACE,MAAM,EAAEF,OAAO,CAACA,OAAO,CAAC;QACpE,CAAC,MACI;UACD,IAAI,CAAClB,MAAM,CAACmB,kBAAkB,CAAC,CAACD,OAAO,CAACA,OAAO,CAAC;QACpD;QACA,IAAIA,OAAO,CAACG,UAAU,IAAIH,OAAO,CAACG,UAAU,CAACC,MAAM,EAAE;UACjD,IAAI,CAACtB,MAAM,CAACmB,kBAAkB,CAAC,CAAC,aAAa,EAAED,OAAO,CAACG,UAAU,CAAC;QACtE;MACJ;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataViewerComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/game'; // URL de tu backend para el recurso game\n    this.games = []; // Aquí almacenaremos la lista de juegos\n  }\n\n  ngOnInit() {\n    this.fetchAllGames();\n  }\n  fetchAllGames() {\n    this.http.get(`${this.baseUrl}/1`).subscribe(data => {\n      console.log('Datos recibidos del backend:', data);\n      this.games = data;\n    }, error => {\n      console.error('Error al obtener datos:', error);\n    });\n  }\n  // Si necesitas obtener un juego específico por su ID:\n  fetchGameById(id) {\n    this.http.get(`${this.baseUrl}/${id}`).subscribe(data => {\n      console.log(`Datos del juego con ID ${id}:`, data);\n    }, error => {\n      console.error(`Error al obtener el juego con ID ${id}:`, error);\n    });\n  }\n  static #_ = this.ɵfac = function DataViewerComponent_Factory(t) {\n    return new (t || DataViewerComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataViewerComponent,\n    selectors: [[\"app-data-viewer\"]],\n    decls: 2,\n    vars: 0,\n    template: function DataViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"data-viewer works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DataViewerComponent","constructor","http","baseUrl","games","ngOnInit","fetchAllGames","get","subscribe","data","console","log","error","fetchGameById","id","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","template","DataViewerComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\data-viewer\\data-viewer.component.ts","C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\data-viewer\\data-viewer.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-data-viewer',\n  templateUrl: './data-viewer.component.html',\n  styleUrls: ['./data-viewer.component.css']\n})\nexport class DataViewerComponent implements OnInit {\n\n  private baseUrl = 'http://localhost:3000/game'; // URL de tu backend para el recurso game\n\n  games: Game[] = []; // Aquí almacenaremos la lista de juegos\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.fetchAllGames();\n  }\n\n  fetchAllGames(): void {\n    this.http.get<Game[]>(`${this.baseUrl}/1`).subscribe(\n      data => {\n        console.log('Datos recibidos del backend:', data);\n        this.games = data;\n      },\n      error => {\n        console.error('Error al obtener datos:', error);\n      }\n    );\n  }\n\n  // Si necesitas obtener un juego específico por su ID:\n  fetchGameById(id: number): void {\n    this.http.get<Game>(`${this.baseUrl}/${id}`).subscribe(\n      data => {\n        console.log(`Datos del juego con ID ${id}:`, data);\n      },\n      error => {\n        console.error(`Error al obtener el juego con ID ${id}:`, error);\n      }\n    );\n  }\n\n  // ... Puedes agregar más métodos aquí si necesitas interactuar con otros endpoints (crear, actualizar, eliminar).\n\n}\n\n// Puedes definir una interfaz para el tipo Game si aún no la tienes en otro lugar\ninterface Game {\n  id: number;\n  board: JsonWebKey;\n  status: number;\n  playerXid: number;\n  playerOid: number;\n  turn: 'X' | 'O';\n}\n\n","<p>data-viewer works!</p>\n"],"mappings":";;AAQA,OAAM,MAAOA,mBAAmB;EAM9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,OAAO,GAAG,4BAA4B,CAAC,CAAC;IAEhD,KAAAC,KAAK,GAAW,EAAE,CAAC,CAAC;EAEoB;;EAExCC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAaA,CAAA;IACX,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,OAAO,IAAI,CAAC,CAACK,SAAS,CAClDC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAAC;MACjD,IAAI,CAACL,KAAK,GAAGK,IAAI;IACnB,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAEA;EACAC,aAAaA,CAACC,EAAU;IACtB,IAAI,CAACZ,IAAI,CAACK,GAAG,CAAO,GAAG,IAAI,CAACJ,OAAO,IAAIW,EAAE,EAAE,CAAC,CAACN,SAAS,CACpDC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAAC,0BAA0BG,EAAE,GAAG,EAAEL,IAAI,CAAC;IACpD,CAAC,EACDG,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,oCAAoCE,EAAE,GAAG,EAAEF,KAAK,CAAC;IACjE,CAAC,CACF;EACH;EAAC,QAAAG,CAAA,G;qBAlCUf,mBAAmB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBpB,mBAAmB;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRhCV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,yBAAkB;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}
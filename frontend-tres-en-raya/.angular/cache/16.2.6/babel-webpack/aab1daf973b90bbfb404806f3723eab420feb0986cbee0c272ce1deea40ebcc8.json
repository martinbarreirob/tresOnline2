{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nexport let LoggingComponent = class LoggingComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/';\n    this.inputNombre = '';\n  }\n  ngOnInit() {}\n  registroUser() {\n    this.insertPlayer(this.inputNombre).subscribe(player => {\n      localStorage.setItem('player', JSON.stringify(player));\n      this.searchForGame().subscribe(freeGame => {\n        if (freeGame && freeGame.length > 0) {\n          let enterFreeGame = {\n            playerOid: player.id,\n            status: 1\n          };\n          this.http.put(`${this.baseUrl}game/${freeGame[0].id}`, enterFreeGame).subscribe(updateGame => {\n            console.log('Usuario añadido a Juego Disponible');\n          });\n        } else {\n          console.log('No hay juego libre. Creando uno nuevo...');\n          this.createGame(player.id).subscribe(game => {\n            console.log(game);\n          });\n        }\n      });\n    });\n  }\n  insertPlayer(nombre) {\n    const nombrePlayer = {\n      nombre: nombre\n    };\n    return this.http.post(`${this.baseUrl}player/`, nombrePlayer);\n  }\n  createGame(playerId) {\n    const gameData = {\n      board: JSON.stringify([['', '', ''], ['', '', ''], ['', '', '']]),\n      status: 0,\n      playerXid: playerId,\n      playerOid: \"\",\n      turn: 'X'\n    };\n    return this.http.post(`${this.baseUrl}game/`, gameData);\n  }\n  searchForGame() {\n    return this.http.get(`${this.baseUrl}game/free`).pipe(catchError(error => {\n      //console.error('Error al buscar juego libre:', error);\n      return of(null); // Devuelve un valor nulo si ocurre un error\n    }));\n  }\n};\n\nLoggingComponent = __decorate([Component({\n  selector: 'app-logging',\n  templateUrl: './logging.component.html',\n  styleUrls: ['./logging.component.css']\n})], LoggingComponent);","map":{"version":3,"names":["Component","catchError","of","LoggingComponent","constructor","http","baseUrl","inputNombre","ngOnInit","registroUser","insertPlayer","subscribe","player","localStorage","setItem","JSON","stringify","searchForGame","freeGame","length","enterFreeGame","playerOid","id","status","put","updateGame","console","log","createGame","game","nombre","nombrePlayer","post","playerId","gameData","board","playerXid","turn","get","pipe","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\logging\\logging.component.ts"],"sourcesContent":["import { Component, OnInit, } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Player, Game } from '../models/interfaces.model';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-logging',\n  templateUrl: './logging.component.html',\n  styleUrls: ['./logging.component.css']\n})\nexport class LoggingComponent implements OnInit{\n  private baseUrl: string = 'http://localhost:3000/';\n  inputNombre: string = '';\n  freeGame: any;\n\n  constructor (private http: HttpClient ){}\n\n  ngOnInit(): void {\n\n  }\n\n\n  registroUser(): void {\n    this.insertPlayer(this.inputNombre).subscribe((player: Player) => {\n      localStorage.setItem('player', JSON.stringify(player));\n\n      this.searchForGame().subscribe(freeGame => {\n        if (freeGame && freeGame.length > 0) {\n          let enterFreeGame = {\n            playerOid: player.id,\n            status: 1,\n          };\n\n          this.http.put<Game>(`${this.baseUrl}game/${freeGame[0].id}`, enterFreeGame).subscribe(updateGame => {\n            console.log('Usuario añadido a Juego Disponible');\n          });\n        } else {\n          console.log('No hay juego libre. Creando uno nuevo...');\n          this.createGame(player.id).subscribe((game: Game) => {\n            console.log(game);\n          });\n        }\n      });\n    });\n  }\n\n\n\n  insertPlayer(nombre: string) {\n    const nombrePlayer = { nombre: nombre};\n    return this.http.post<Player>(`${this.baseUrl}player/`, nombrePlayer);\n  }\n\n\n  createGame(playerId: number){\n    const gameData = {\n      board: JSON.stringify([\n        ['', '', ''],\n        ['', '', ''],\n        ['', '', '']\n      ]),\n      status: 0,\n      playerXid: playerId,\n      playerOid: \"\",\n      turn: 'X',\n    }\n    return this.http.post<Game>(`${this.baseUrl}game/`, gameData);\n  }\n\n  searchForGame(): Observable<Game[] | null> {\n    return this.http.get<Game[]>(`${this.baseUrl}game/free`).pipe(\n      catchError(error => {\n        //console.error('Error al buscar juego libre:', error);\n        return of(null); // Devuelve un valor nulo si ocurre un error\n      })\n    );\n  }\n\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAiB,eAAe;AAIlD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,EAAE,QAAQ,MAAM;AAOlB,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJjB,KAAAC,OAAO,GAAW,wBAAwB;IAClD,KAAAC,WAAW,GAAW,EAAE;EAGgB;EAExCC,QAAQA,CAAA,GAER;EAGAC,YAAYA,CAAA;IACV,IAAI,CAACC,YAAY,CAAC,IAAI,CAACH,WAAW,CAAC,CAACI,SAAS,CAAEC,MAAc,IAAI;MAC/DC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC,CAAC;MAEtD,IAAI,CAACK,aAAa,EAAE,CAACN,SAAS,CAACO,QAAQ,IAAG;QACxC,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;UACnC,IAAIC,aAAa,GAAG;YAClBC,SAAS,EAAET,MAAM,CAACU,EAAE;YACpBC,MAAM,EAAE;WACT;UAED,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAO,GAAG,IAAI,CAAClB,OAAO,QAAQY,QAAQ,CAAC,CAAC,CAAC,CAACI,EAAE,EAAE,EAAEF,aAAa,CAAC,CAACT,SAAS,CAACc,UAAU,IAAG;YACjGC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;UACnD,CAAC,CAAC;SACH,MAAM;UACLD,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;UACvD,IAAI,CAACC,UAAU,CAAChB,MAAM,CAACU,EAAE,CAAC,CAACX,SAAS,CAAEkB,IAAU,IAAI;YAClDH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;UACnB,CAAC,CAAC;;MAEN,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAIAnB,YAAYA,CAACoB,MAAc;IACzB,MAAMC,YAAY,GAAG;MAAED,MAAM,EAAEA;IAAM,CAAC;IACtC,OAAO,IAAI,CAACzB,IAAI,CAAC2B,IAAI,CAAS,GAAG,IAAI,CAAC1B,OAAO,SAAS,EAAEyB,YAAY,CAAC;EACvE;EAGAH,UAAUA,CAACK,QAAgB;IACzB,MAAMC,QAAQ,GAAG;MACfC,KAAK,EAAEpB,IAAI,CAACC,SAAS,CAAC,CACpB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CACb,CAAC;MACFO,MAAM,EAAE,CAAC;MACTa,SAAS,EAAEH,QAAQ;MACnBZ,SAAS,EAAE,EAAE;MACbgB,IAAI,EAAE;KACP;IACD,OAAO,IAAI,CAAChC,IAAI,CAAC2B,IAAI,CAAO,GAAG,IAAI,CAAC1B,OAAO,OAAO,EAAE4B,QAAQ,CAAC;EAC/D;EAEAjB,aAAaA,CAAA;IACX,OAAO,IAAI,CAACZ,IAAI,CAACiC,GAAG,CAAS,GAAG,IAAI,CAAChC,OAAO,WAAW,CAAC,CAACiC,IAAI,CAC3DtC,UAAU,CAACuC,KAAK,IAAG;MACjB;MACA,OAAOtC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACH;EACH;CAKD;;AAvEYC,gBAAgB,GAAAsC,UAAA,EAL5BzC,SAAS,CAAC;EACT0C,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWzC,gBAAgB,CAuE5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class LoggingComponent {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/';\n    this.inputNombre = '';\n  }\n  ngOnInit() {\n    this.searchForGame().subscribe(freeGame => {\n      this.freeGame = freeGame;\n      if (this.freeGame) {\n        console.log('juego libre');\n      } else {\n        console.log('no juego libre');\n      }\n    });\n  }\n  registroUser() {\n    let playerRegistrado;\n    this.insertPlayer(this.inputNombre).subscribe(player => {\n      localStorage.setItem('player', JSON.stringify(player));\n      playerRegistrado = player;\n      console.log(playerRegistrado);\n      this.insertGame(playerRegistrado.id).subscribe(game => {\n        console.log(game);\n      });\n    });\n  }\n  insertPlayer(nombre) {\n    const nombrePlayer = {\n      nombre: nombre\n    };\n    return this.http.post(`${this.baseUrl}player/`, nombrePlayer);\n  }\n  insertGame(playerId) {\n    const gameData = {\n      board: JSON.stringify([['', '', ''], ['', '', ''], ['', '', '']]),\n      status: 0,\n      playerXid: playerId,\n      playerOid: \"\",\n      turn: 'X'\n    };\n    return this.http.post(`${this.baseUrl}game/`, gameData);\n  }\n  static #_ = this.ɵfac = function LoggingComponent_Factory(t) {\n    return new (t || LoggingComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoggingComponent,\n    selectors: [[\"app-logging\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 3, \"click\"]],\n    template: function LoggingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"logging works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LoggingComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.inputNombre = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function LoggingComponent_Template_button_click_3_listener() {\n          return ctx.registroUser();\n        });\n        i0.ɵɵtext(4, \"Jugar\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.inputNombre);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\n{\n  this.http.get(`${this.baseUrl}game/free`).subscribe(data => {\n    console.log('Partida abierta:', data);\n    return data;\n  }, error => {\n    console.error('Error al obtener datos:', error);\n  });\n}","map":{"version":3,"names":["LoggingComponent","constructor","http","baseUrl","inputNombre","ngOnInit","searchForGame","subscribe","freeGame","console","log","registroUser","playerRegistrado","insertPlayer","player","localStorage","setItem","JSON","stringify","insertGame","id","game","nombre","nombrePlayer","post","playerId","gameData","board","status","playerXid","playerOid","turn","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","LoggingComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoggingComponent_Template_input_ngModelChange_2_listener","$event","LoggingComponent_Template_button_click_3_listener","ɵɵadvance","ɵɵproperty","get","data","error"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\logging\\logging.component.ts","C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\logging\\logging.component.html"],"sourcesContent":["import { Component, OnInit, } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Player, Game } from '../models/interfaces.model';\n\n@Component({\n  selector: 'app-logging',\n  templateUrl: './logging.component.html',\n  styleUrls: ['./logging.component.css']\n})\nexport class LoggingComponent implements OnInit{\n  private baseUrl: string = 'http://localhost:3000/';\n  inputNombre: string = '';\n  freeGame: any;\n\n  constructor (private http: HttpClient ){}\n\n  ngOnInit(): void {\n    this.searchForGame().subscribe(freeGame => {\n      this.freeGame = freeGame;\n\n      if (this.freeGame) {\n        console.log('juego libre');\n      } else {\n        console.log('no juego libre');\n      }\n    });\n  }\n\n\n  registroUser(): void{\n    let playerRegistrado: Player;\n    this.insertPlayer(this.inputNombre).subscribe((player: Player) => {\n        localStorage.setItem('player', JSON.stringify(player));\n        playerRegistrado = player;\n        console.log(playerRegistrado);\n\n        this.insertGame(playerRegistrado.id).subscribe((game: Game) => {\n          console.log(game);\n        });\n    });\n\n\n\n\n  }\n\n  insertPlayer(nombre: string) {\n    const nombrePlayer = { nombre: nombre};\n    return this.http.post<Player>(`${this.baseUrl}player/`, nombrePlayer);\n  }\n\n\n  insertGame(playerId: number){\n    const gameData = {\n      board: JSON.stringify([\n        ['', '', ''],\n        ['', '', ''],\n        ['', '', '']\n      ]),\n      status: 0,\n      playerXid: playerId,\n      playerOid: \"\",\n      turn: 'X',\n    }\n    return this.http.post<Game>(`${this.baseUrl}game/`, gameData);\n  }\n\n  searchForGame(); {\n    this.http.get<Game[]>(`${this.baseUrl}game/free`).subscribe(\n      data => {\n        console.log('Partida abierta:', data);\n        return data\n      },\n      error => {\n        console.error('Error al obtener datos:', error);\n      }\n    );\n  }\n\n}\n","<p>logging works!</p>\n\n<input type=\"text\" [(ngModel)]=\"inputNombre\">\n<button type=\"button\" (click)=\"registroUser()\">Jugar</button>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
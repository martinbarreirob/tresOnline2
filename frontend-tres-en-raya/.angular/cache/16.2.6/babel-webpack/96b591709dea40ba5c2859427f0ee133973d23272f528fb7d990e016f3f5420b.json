{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let GameComponent = class GameComponent {\n  constructor(socketService) {\n    this.socketService = socketService;\n    this.board = [['', '', ''], ['', '', ''], ['', '', '']];\n    this.currentPlayer = 'X';\n    // Escuchar movimientos de otros jugadores\n    this.socketService.listenForMoves().subscribe(moveData => {\n      this.board[moveData.row][moveData.col] = moveData.player;\n      this.currentPlayer = moveData.player === 'X' ? 'O' : 'X';\n    });\n  }\n  makeMove(row, col) {\n    if (this.board[row][col] === '') {\n      this.board[row][col] = this.currentPlayer;\n      this.socketService.emitMove({\n        row,\n        col,\n        player: this.currentPlayer\n      });\n      this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\n    }\n  }\n};\nGameComponent = __decorate([Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html'\n})], GameComponent);","map":{"version":3,"names":["Component","GameComponent","constructor","socketService","board","currentPlayer","listenForMoves","subscribe","moveData","row","col","player","makeMove","emitMove","__decorate","selector","templateUrl"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\game\\game.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SocketService } from './socket.service'; // AsegÃºrate de importar tu servicio\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html'\n})\nexport class GameComponent {\n  board: string[][] = [\n    ['', '', ''],\n    ['', '', ''],\n    ['', '', '']\n  ];\n  currentPlayer: string = 'X';\n\n  constructor(private socketService: SocketService) {\n    // Escuchar movimientos de otros jugadores\n    this.socketService.listenForMoves().subscribe((moveData: {row: number, col: number, player: string}) => {\n      this.board[moveData.row][moveData.col] = moveData.player;\n      this.currentPlayer = moveData.player === 'X' ? 'O' : 'X';\n    });\n  }\n\n  makeMove(row: number, col: number): void {\n    if (this.board[row][col] === '') {\n      this.board[row][col] = this.currentPlayer;\n      this.socketService.emitMove({ row, col, player: this.currentPlayer });\n      this.currentPlayer = this.currentPlayer === 'X' ? 'O' : 'X';\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAQxBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAPjC,KAAAC,KAAK,GAAe,CAClB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CACb;IACD,KAAAC,aAAa,GAAW,GAAG;IAGzB;IACA,IAAI,CAACF,aAAa,CAACG,cAAc,EAAE,CAACC,SAAS,CAAEC,QAAoD,IAAI;MACrG,IAAI,CAACJ,KAAK,CAACI,QAAQ,CAACC,GAAG,CAAC,CAACD,QAAQ,CAACE,GAAG,CAAC,GAAGF,QAAQ,CAACG,MAAM;MACxD,IAAI,CAACN,aAAa,GAAGG,QAAQ,CAACG,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;IAC1D,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAACH,GAAW,EAAEC,GAAW;IAC/B,IAAI,IAAI,CAACN,KAAK,CAACK,GAAG,CAAC,CAACC,GAAG,CAAC,KAAK,EAAE,EAAE;MAC/B,IAAI,CAACN,KAAK,CAACK,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,IAAI,CAACL,aAAa;MACzC,IAAI,CAACF,aAAa,CAACU,QAAQ,CAAC;QAAEJ,GAAG;QAAEC,GAAG;QAAEC,MAAM,EAAE,IAAI,CAACN;MAAa,CAAE,CAAC;MACrE,IAAI,CAACA,aAAa,GAAG,IAAI,CAACA,aAAa,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;;EAE/D;CACD;AAvBYJ,aAAa,GAAAa,UAAA,EAJzBd,SAAS,CAAC;EACTe,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CACd,CAAC,C,EACWf,aAAa,CAuBzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
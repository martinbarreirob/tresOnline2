{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * Special decorator used to extract relation id into separate entity property.\n *\n * @experimental\n */\nexport function RelationId(relation, alias, queryBuilderFactory) {\n  return function (object, propertyName) {\n    getMetadataArgsStorage().relationIds.push({\n      target: object.constructor,\n      propertyName: propertyName,\n      relation: relation,\n      alias: alias,\n      queryBuilderFactory: queryBuilderFactory\n    });\n  };\n}","map":{"version":3,"names":["getMetadataArgsStorage","RelationId","relation","alias","queryBuilderFactory","object","propertyName","relationIds","push","target","constructor"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/decorator/relations/RelationId.js"],"sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * Special decorator used to extract relation id into separate entity property.\n *\n * @experimental\n */\nexport function RelationId(relation, alias, queryBuilderFactory) {\n    return function (object, propertyName) {\n        getMetadataArgsStorage().relationIds.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            relation: relation,\n            alias: alias,\n            queryBuilderFactory: queryBuilderFactory,\n        });\n    };\n}\n\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,mBAAmB,EAAE;EAC7D,OAAO,UAAUC,MAAM,EAAEC,YAAY,EAAE;IACnCN,sBAAsB,CAAC,CAAC,CAACO,WAAW,CAACC,IAAI,CAAC;MACtCC,MAAM,EAAEJ,MAAM,CAACK,WAAW;MAC1BJ,YAAY,EAAEA,YAAY;MAC1BJ,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA,KAAK;MACZC,mBAAmB,EAAEA;IACzB,CAAC,CAAC;EACN,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}
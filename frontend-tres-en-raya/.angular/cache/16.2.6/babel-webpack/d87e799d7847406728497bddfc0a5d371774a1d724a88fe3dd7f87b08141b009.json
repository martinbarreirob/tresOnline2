{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * JoinColumn decorator used on one-to-one relations to specify owner side of relationship.\n * It also can be used on both one-to-one and many-to-one relations to specify custom column name\n * or custom referenced column.\n */\nexport function JoinColumn(optionsOrOptionsArray) {\n  return function (object, propertyName) {\n    const options = Array.isArray(optionsOrOptionsArray) ? optionsOrOptionsArray : [optionsOrOptionsArray || {}];\n    options.forEach(options => {\n      getMetadataArgsStorage().joinColumns.push({\n        target: object.constructor,\n        propertyName: propertyName,\n        name: options.name,\n        referencedColumnName: options.referencedColumnName,\n        foreignKeyConstraintName: options.foreignKeyConstraintName\n      });\n    });\n  };\n}","map":{"version":3,"names":["getMetadataArgsStorage","JoinColumn","optionsOrOptionsArray","object","propertyName","options","Array","isArray","forEach","joinColumns","push","target","constructor","name","referencedColumnName","foreignKeyConstraintName"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/decorator/relations/JoinColumn.js"],"sourcesContent":["import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * JoinColumn decorator used on one-to-one relations to specify owner side of relationship.\n * It also can be used on both one-to-one and many-to-one relations to specify custom column name\n * or custom referenced column.\n */\nexport function JoinColumn(optionsOrOptionsArray) {\n    return function (object, propertyName) {\n        const options = Array.isArray(optionsOrOptionsArray)\n            ? optionsOrOptionsArray\n            : [optionsOrOptionsArray || {}];\n        options.forEach((options) => {\n            getMetadataArgsStorage().joinColumns.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                name: options.name,\n                referencedColumnName: options.referencedColumnName,\n                foreignKeyConstraintName: options.foreignKeyConstraintName,\n            });\n        });\n    };\n}\n\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,qBAAqB,EAAE;EAC9C,OAAO,UAAUC,MAAM,EAAEC,YAAY,EAAE;IACnC,MAAMC,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACL,qBAAqB,CAAC,GAC9CA,qBAAqB,GACrB,CAACA,qBAAqB,IAAI,CAAC,CAAC,CAAC;IACnCG,OAAO,CAACG,OAAO,CAAEH,OAAO,IAAK;MACzBL,sBAAsB,CAAC,CAAC,CAACS,WAAW,CAACC,IAAI,CAAC;QACtCC,MAAM,EAAER,MAAM,CAACS,WAAW;QAC1BR,YAAY,EAAEA,YAAY;QAC1BS,IAAI,EAAER,OAAO,CAACQ,IAAI;QAClBC,oBAAoB,EAAET,OAAO,CAACS,oBAAoB;QAClDC,wBAAwB,EAAEV,OAAO,CAACU;MACtC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}
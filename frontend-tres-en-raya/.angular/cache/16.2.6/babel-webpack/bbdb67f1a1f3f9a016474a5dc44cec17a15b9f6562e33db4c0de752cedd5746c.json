{"ast":null,"code":"export class RandomGenerator {\n  /**\n   *  discuss at: http://locutus.io/php/sha1/\n   * original by: Webtoolkit.info (http://www.webtoolkit.info/)\n   * improved by: Michael White (http://getsprink.com)\n   * improved by: Kevin van Zonneveld (http://kvz.io)\n   *    input by: Brett Zamir (http://brett-zamir.me)\n   *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n   *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n   *      note 1: in a steaming fashion for faster and more efficient hashing\n   *   example 1: sha1('Kevin van Zonneveld')\n   *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n   */\n  static sha1(str) {\n    let _rotLeft = function (n, s) {\n      let t4 = n << s | n >>> 32 - s;\n      return t4;\n    };\n    let _cvtHex = function (val) {\n      let str = \"\";\n      let i;\n      let v;\n      for (i = 7; i >= 0; i--) {\n        v = val >>> i * 4 & 0x0f;\n        str += v.toString(16);\n      }\n      return str;\n    };\n    let blockstart;\n    let i, j;\n    let W = new Array(80);\n    let H0 = 0x67452301;\n    let H1 = 0xefcdab89;\n    let H2 = 0x98badcfe;\n    let H3 = 0x10325476;\n    let H4 = 0xc3d2e1f0;\n    let A, B, C, D, E;\n    let temp;\n    // utf8_encode\n    str = /*unescape*/encodeURIComponent(str);\n    let strLen = str.length;\n    let wordArray = [];\n    for (i = 0; i < strLen - 3; i += 4) {\n      j = str.charCodeAt(i) << 24 | str.charCodeAt(i + 1) << 16 | str.charCodeAt(i + 2) << 8 | str.charCodeAt(i + 3);\n      wordArray.push(j);\n    }\n    switch (strLen % 4) {\n      case 0:\n        i = 0x080000000;\n        break;\n      case 1:\n        i = str.charCodeAt(strLen - 1) << 24 | 0x0800000;\n        break;\n      case 2:\n        i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000;\n        break;\n      case 3:\n        i = str.charCodeAt(strLen - 3) << 24 | str.charCodeAt(strLen - 2) << 16 | str.charCodeAt(strLen - 1) << 8 | 0x80;\n        break;\n    }\n    wordArray.push(i);\n    while (wordArray.length % 16 !== 14) {\n      wordArray.push(0);\n    }\n    wordArray.push(strLen >>> 29);\n    wordArray.push(strLen << 3 & 0x0ffffffff);\n    for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n      for (i = 0; i < 16; i++) {\n        W[i] = wordArray[blockstart + i];\n      }\n      for (i = 16; i <= 79; i++) {\n        W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n      }\n      A = H0;\n      B = H1;\n      C = H2;\n      D = H3;\n      E = H4;\n      for (i = 0; i <= 19; i++) {\n        temp = _rotLeft(A, 5) + (B & C | ~B & D) + E + W[i] + 0x5a827999 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n      for (i = 20; i <= 39; i++) {\n        temp = _rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ed9eba1 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n      for (i = 40; i <= 59; i++) {\n        temp = _rotLeft(A, 5) + (B & C | B & D | C & D) + E + W[i] + 0x8f1bbcdc & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n      for (i = 60; i <= 79; i++) {\n        temp = _rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xca62c1d6 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n      H0 = H0 + A & 0x0ffffffff;\n      H1 = H1 + B & 0x0ffffffff;\n      H2 = H2 + C & 0x0ffffffff;\n      H3 = H3 + D & 0x0ffffffff;\n      H4 = H4 + E & 0x0ffffffff;\n    }\n    temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4);\n    return temp.toLowerCase();\n  }\n}","map":{"version":3,"names":["RandomGenerator","sha1","str","_rotLeft","n","s","t4","_cvtHex","val","i","v","toString","blockstart","j","W","Array","H0","H1","H2","H3","H4","A","B","C","D","E","temp","encodeURIComponent","strLen","length","wordArray","charCodeAt","push","toLowerCase"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/util/RandomGenerator.js"],"sourcesContent":["export class RandomGenerator {\n    /**\n     *  discuss at: http://locutus.io/php/sha1/\n     * original by: Webtoolkit.info (http://www.webtoolkit.info/)\n     * improved by: Michael White (http://getsprink.com)\n     * improved by: Kevin van Zonneveld (http://kvz.io)\n     *    input by: Brett Zamir (http://brett-zamir.me)\n     *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n     *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n     *      note 1: in a steaming fashion for faster and more efficient hashing\n     *   example 1: sha1('Kevin van Zonneveld')\n     *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n     */\n    static sha1(str) {\n        let _rotLeft = function (n, s) {\n            let t4 = (n << s) | (n >>> (32 - s));\n            return t4;\n        };\n        let _cvtHex = function (val) {\n            let str = \"\";\n            let i;\n            let v;\n            for (i = 7; i >= 0; i--) {\n                v = (val >>> (i * 4)) & 0x0f;\n                str += v.toString(16);\n            }\n            return str;\n        };\n        let blockstart;\n        let i, j;\n        let W = new Array(80);\n        let H0 = 0x67452301;\n        let H1 = 0xefcdab89;\n        let H2 = 0x98badcfe;\n        let H3 = 0x10325476;\n        let H4 = 0xc3d2e1f0;\n        let A, B, C, D, E;\n        let temp;\n        // utf8_encode\n        str = /*unescape*/ encodeURIComponent(str);\n        let strLen = str.length;\n        let wordArray = [];\n        for (i = 0; i < strLen - 3; i += 4) {\n            j =\n                (str.charCodeAt(i) << 24) |\n                    (str.charCodeAt(i + 1) << 16) |\n                    (str.charCodeAt(i + 2) << 8) |\n                    str.charCodeAt(i + 3);\n            wordArray.push(j);\n        }\n        switch (strLen % 4) {\n            case 0:\n                i = 0x080000000;\n                break;\n            case 1:\n                i = (str.charCodeAt(strLen - 1) << 24) | 0x0800000;\n                break;\n            case 2:\n                i =\n                    (str.charCodeAt(strLen - 2) << 24) |\n                        (str.charCodeAt(strLen - 1) << 16) |\n                        0x08000;\n                break;\n            case 3:\n                i =\n                    (str.charCodeAt(strLen - 3) << 24) |\n                        (str.charCodeAt(strLen - 2) << 16) |\n                        (str.charCodeAt(strLen - 1) << 8) |\n                        0x80;\n                break;\n        }\n        wordArray.push(i);\n        while (wordArray.length % 16 !== 14) {\n            wordArray.push(0);\n        }\n        wordArray.push(strLen >>> 29);\n        wordArray.push((strLen << 3) & 0x0ffffffff);\n        for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n            for (i = 0; i < 16; i++) {\n                W[i] = wordArray[blockstart + i];\n            }\n            for (i = 16; i <= 79; i++) {\n                W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n            }\n            A = H0;\n            B = H1;\n            C = H2;\n            D = H3;\n            E = H4;\n            for (i = 0; i <= 19; i++) {\n                temp =\n                    (_rotLeft(A, 5) +\n                        ((B & C) | (~B & D)) +\n                        E +\n                        W[i] +\n                        0x5a827999) &\n                        0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 20; i <= 39; i++) {\n                temp =\n                    (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ed9eba1) &\n                        0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 40; i <= 59; i++) {\n                temp =\n                    (_rotLeft(A, 5) +\n                        ((B & C) | (B & D) | (C & D)) +\n                        E +\n                        W[i] +\n                        0x8f1bbcdc) &\n                        0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 60; i <= 79; i++) {\n                temp =\n                    (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xca62c1d6) &\n                        0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            H0 = (H0 + A) & 0x0ffffffff;\n            H1 = (H1 + B) & 0x0ffffffff;\n            H2 = (H2 + C) & 0x0ffffffff;\n            H3 = (H3 + D) & 0x0ffffffff;\n            H4 = (H4 + E) & 0x0ffffffff;\n        }\n        temp =\n            _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4);\n        return temp.toLowerCase();\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
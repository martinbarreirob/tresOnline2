{"ast":null,"code":"/**\n * Database's table exclusion constraint stored in this class.\n */\nexport class TableExclusion {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  constructor(options) {\n    this[\"@instanceof\"] = Symbol.for(\"TableExclusion\");\n    this.name = options.name;\n    this.expression = options.expression;\n  }\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n  /**\n   * Creates a new copy of this constraint with exactly same properties.\n   */\n  clone() {\n    return new TableExclusion({\n      name: this.name,\n      expression: this.expression\n    });\n  }\n  // -------------------------------------------------------------------------\n  // Static Methods\n  // -------------------------------------------------------------------------\n  /**\n   * Creates exclusions from the exclusion metadata object.\n   */\n  static create(exclusionMetadata) {\n    return new TableExclusion({\n      name: exclusionMetadata.name,\n      expression: exclusionMetadata.expression\n    });\n  }\n}","map":{"version":3,"names":["TableExclusion","constructor","options","Symbol","for","name","expression","clone","create","exclusionMetadata"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/schema-builder/table/TableExclusion.js"],"sourcesContent":["/**\n * Database's table exclusion constraint stored in this class.\n */\nexport class TableExclusion {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(options) {\n        this[\"@instanceof\"] = Symbol.for(\"TableExclusion\");\n        this.name = options.name;\n        this.expression = options.expression;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    clone() {\n        return new TableExclusion({\n            name: this.name,\n            expression: this.expression,\n        });\n    }\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates exclusions from the exclusion metadata object.\n     */\n    static create(exclusionMetadata) {\n        return new TableExclusion({\n            name: exclusionMetadata.name,\n            expression: exclusionMetadata.expression,\n        });\n    }\n}\n\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,CAAC;EACxB;EACA;EACA;EACAC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAAC,aAAa,CAAC,GAAGC,MAAM,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAClD,IAAI,CAACC,IAAI,GAAGH,OAAO,CAACG,IAAI;IACxB,IAAI,CAACC,UAAU,GAAGJ,OAAO,CAACI,UAAU;EACxC;EACA;EACA;EACA;EACA;AACJ;AACA;EACIC,KAAKA,CAAA,EAAG;IACJ,OAAO,IAAIP,cAAc,CAAC;MACtBK,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,UAAU,EAAE,IAAI,CAACA;IACrB,CAAC,CAAC;EACN;EACA;EACA;EACA;EACA;AACJ;AACA;EACI,OAAOE,MAAMA,CAACC,iBAAiB,EAAE;IAC7B,OAAO,IAAIT,cAAc,CAAC;MACtBK,IAAI,EAAEI,iBAAiB,CAACJ,IAAI;MAC5BC,UAAU,EAAEG,iBAAiB,CAACH;IAClC,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
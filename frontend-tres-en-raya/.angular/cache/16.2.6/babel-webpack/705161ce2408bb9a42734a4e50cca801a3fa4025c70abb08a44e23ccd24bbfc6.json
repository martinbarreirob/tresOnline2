{"ast":null,"code":"import { TypeORMError } from \"../error\";\nexport class EntitySchemaEmbeddedError extends TypeORMError {\n  static createEntitySchemaIsRequiredException(field) {\n    return new EntitySchemaEmbeddedError(`EntitySchema is required for ${field} embedded field`);\n  }\n  static createTargetIsRequired(field) {\n    return new EntitySchemaEmbeddedError(`Target field is required for ${field} embedded EntitySchema`);\n  }\n  constructor(message) {\n    super(message);\n  }\n}","map":{"version":3,"names":["TypeORMError","EntitySchemaEmbeddedError","createEntitySchemaIsRequiredException","field","createTargetIsRequired","constructor","message"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/entity-schema/EntitySchemaEmbeddedError.js"],"sourcesContent":["import { TypeORMError } from \"../error\";\nexport class EntitySchemaEmbeddedError extends TypeORMError {\n    static createEntitySchemaIsRequiredException(field) {\n        return new EntitySchemaEmbeddedError(`EntitySchema is required for ${field} embedded field`);\n    }\n    static createTargetIsRequired(field) {\n        return new EntitySchemaEmbeddedError(`Target field is required for ${field} embedded EntitySchema`);\n    }\n    constructor(message) {\n        super(message);\n    }\n}\n\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,OAAO,MAAMC,yBAAyB,SAASD,YAAY,CAAC;EACxD,OAAOE,qCAAqCA,CAACC,KAAK,EAAE;IAChD,OAAO,IAAIF,yBAAyB,CAAE,gCAA+BE,KAAM,iBAAgB,CAAC;EAChG;EACA,OAAOC,sBAAsBA,CAACD,KAAK,EAAE;IACjC,OAAO,IAAIF,yBAAyB,CAAE,gCAA+BE,KAAM,wBAAuB,CAAC;EACvG;EACAE,WAAWA,CAACC,OAAO,EAAE;IACjB,KAAK,CAACA,OAAO,CAAC;EAClB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
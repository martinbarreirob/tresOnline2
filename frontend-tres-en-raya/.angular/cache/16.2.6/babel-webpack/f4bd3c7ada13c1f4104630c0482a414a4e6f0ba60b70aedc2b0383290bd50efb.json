{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../socket.service\";\nimport * as i3 from \"@angular/common\";\nfunction GameComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h2\");\n    i0.ɵɵtext(4, \"Tu Turno\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.player.nombre);\n  }\n}\nfunction GameComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.opponent == null ? null : ctx_r1.opponent.nombre);\n  }\n}\nfunction GameComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.opponent == null ? null : ctx_r2.opponent.nombre);\n  }\n}\nfunction GameComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.player.nombre);\n  }\n}\nfunction GameComponent_tr_9_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵlistener(\"click\", function GameComponent_tr_9_td_1_Template_td_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const col_r7 = restoredCtx.$implicit;\n      const row_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.makeMove(row_r5, col_r7));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r7 = ctx.$implicit;\n    const row_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.board[row_r5][col_r7], \" \");\n  }\n}\nconst _c0 = function () {\n  return [0, 1, 2];\n};\nfunction GameComponent_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, GameComponent_tr_9_td_1_Template, 2, 1, \"td\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"degradadoX\": a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"degradadoY\": a0\n  };\n};\nexport class GameComponent {\n  constructor(http, socketService) {\n    this.http = http;\n    this.socketService = socketService;\n    this.baseUrl = 'http://localhost:3000/';\n    this.board = [['', '', ''], ['', '', ''], ['', '', '']];\n    this.gameOver = false;\n  }\n  ngOnInit() {\n    let playerLocalStorage = localStorage.getItem('player');\n    if (playerLocalStorage) {\n      this.player = JSON.parse(playerLocalStorage);\n    }\n    // Carga el juego en funcion del usuario que se acaba de registrar con el local storage\n    this.http.get(`${this.baseUrl}game/playerGame/${this.player.id}`).subscribe(game => {\n      this.game = game;\n      this.board = JSON.parse(game.board);\n      //Comprobar si Somos X o O\n      if (this.game.playerXid === this.player.id) {\n        this.currentPlayer = 'X';\n      } else if (this.game.playerOid === this.player.id) {\n        this.currentPlayer = 'O';\n        this.http.get(`${this.baseUrl}player/${this.game.playerXid}`).subscribe(playerX => {\n          this.opponent = playerX;\n        });\n      }\n    });\n    this.socketService.listen('player-connected').subscribe(newPlayer => {\n      this.opponent = newPlayer;\n    });\n    this.socketService.listen('game-updated').subscribe(game => {\n      this.game = game;\n      this.board = JSON.parse(this.game.board);\n      this.checkWinner();\n    });\n  }\n  makeMove(row, col) {\n    //Compruebo si hay oponente\n    if (!this.opponent) {\n      return;\n    }\n    //Compruebo si el juego está terminado\n    if (this.gameOver) {\n      return;\n    }\n    //\n    if (this.board[row][col] !== '') {\n      return;\n    }\n    if (this.game.turn === 'O' && this.game.playerXid === this.player.id) {\n      return;\n    }\n    if (this.game.turn === 'X' && this.game.playerOid === this.player.id) {\n      return;\n    }\n    if (this.game.turn === 'X' && this.game.playerXid === this.player.id) {\n      this.board[row][col] = 'X';\n    } else if (this.game.turn === 'O' && this.game.playerOid === this.player.id) {\n      this.board[row][col] = 'O';\n    }\n    // Continúa con la actualización del tablero en el servidor\n    let boardString = JSON.stringify(this.board);\n    let nextTurn = this.game.turn === 'X' ? 'O' : 'X';\n    this.updateBoard(boardString, nextTurn);\n    this.checkWinner();\n  }\n  updateBoard(board, turn) {\n    const gameData = {\n      board: board,\n      turn: turn\n    };\n    this.http.put(`${this.baseUrl}game/${this.game.id}`, gameData).subscribe(updateGame => {\n      this.socketService.emit(\"game-updated\", updateGame);\n      this.checkWinner();\n    }, error => {\n      console.error('Error al actualizar el juego:', error);\n    });\n  }\n  checkWinner() {\n    // Comprobar filas, columnas y diagonales\n    const winningCombinations = [\n    // Filas\n    [this.board[0][0], this.board[0][1], this.board[0][2]], [this.board[1][0], this.board[1][1], this.board[1][2]], [this.board[2][0], this.board[2][1], this.board[2][2]],\n    // Columnas\n    [this.board[0][0], this.board[1][0], this.board[2][0]], [this.board[0][1], this.board[1][1], this.board[2][1]], [this.board[0][2], this.board[1][2], this.board[2][2]],\n    // Diagonales\n    [this.board[0][0], this.board[1][1], this.board[2][2]], [this.board[0][2], this.board[1][1], this.board[2][0]]];\n    for (let combination of winningCombinations) {\n      if (combination[0] && combination[0] === combination[1] && combination[1] === combination[2]) {\n        this.gameOver = true;\n        return combination[0]; // Retorna 'X' o 'O' según el ganador\n      }\n    }\n    // Comprobar empate: si no hay ninguna celda vacía y no hay ganador\n    const isDraw = this.board.flat().every(cell => cell !== '');\n    if (isDraw) {\n      this.gameOver = true;\n      return 'Draw';\n    }\n    return null; // No hay ganador ni empate aún\n  }\n  static #_ = this.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SocketService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    decls: 10,\n    vars: 12,\n    consts: [[1, \"game-container\"], [1, \"player-section\", \"bg-blue\", \"d-flex\", \"align-items-center\", \"justify-content-center\", 3, \"ngClass\"], [4, \"ngIf\"], [1, \"player-section\", \"bg-purple\", \"d-flex\", \"align-items-center\", \"justify-content-center\", 3, \"ngClass\"], [1, \"board-container\"], [1, \"tres-en-raya\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, GameComponent_div_2_Template, 5, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, GameComponent_div_3_Template, 3, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtemplate(5, GameComponent_div_5_Template, 3, 1, \"div\", 2);\n        i0.ɵɵtemplate(6, GameComponent_div_6_Template, 3, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"table\", 5);\n        i0.ɵɵtemplate(9, GameComponent_tr_9_Template, 2, 2, \"tr\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, (ctx.game == null ? null : ctx.game.turn) === \"X\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentPlayer === \"X\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentPlayer === \"O\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c2, (ctx.game == null ? null : ctx.game.turn) === \"O\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentPlayer === \"X\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentPlayer === \"O\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(11, _c0));\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n    styles: [\".game-container[_ngcontent-%COMP%] {\\n  position: relative; \\n\\n  display: flex;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\n\\n.player-section[_ngcontent-%COMP%] {\\n  flex: 1;\\n  font-size: 2em;\\n}\\n\\n.bg-blue[_ngcontent-%COMP%] {\\n  background-color: rgb(107, 175, 236);\\n}\\n\\n.bg-purple[_ngcontent-%COMP%] {\\n  background-color: rgb(228, 156, 89);\\n}\\n\\n\\n\\n.board-container[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 50vmin; \\n\\n  height: 50vmin; \\n\\n  transform: translate(-50%, -50%); \\n\\n  background-color: white;\\n  border-radius: 10px; \\n\\n  padding: 20px; \\n\\n  box-shadow: 0 0 15px rgba(62, 62, 62, 0.5); \\n\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  border-collapse: collapse;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(46, 46, 46);\\n  width: 33.33%;\\n  height: 33.33%;\\n  text-align: center;\\n  font-size: 1.5em;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:first-child   td[_ngcontent-%COMP%] {\\n  border-top: none;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:last-child   td[_ngcontent-%COMP%] {\\n  border-bottom: none;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child {\\n  border-left: none;\\n}\\n\\n.tres-en-raya[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:last-child {\\n  border-right: none;\\n}\\n\\n\\n\\n\\n.degradadoX[_ngcontent-%COMP%] {\\n\\tbackground: linear-gradient(-45deg, #00a740, #21d37a, #23c0d5, #058bf8);\\n\\tbackground-size: 400% 400%;\\n\\tanimation: _ngcontent-%COMP%_gradient 3s ease infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_gradient {\\n\\t0% {\\n\\t\\tbackground-position: 0% 50%;\\n\\t}\\n\\t50% {\\n\\t\\tbackground-position: 100% 50%;\\n\\t}\\n\\t100% {\\n\\t\\tbackground-position: 0% 50%;\\n\\t}\\n}\\n\\n\\n.degradadoY[_ngcontent-%COMP%] {\\n\\tbackground: linear-gradient(-45deg, #de9308, #f6a818, #d56423, #e84949);\\n\\tbackground-size: 400% 400%;\\n\\tanimation: _ngcontent-%COMP%_gradient 3s ease infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_gradient {\\n\\t0% {\\n\\t\\tbackground-position: 0% 50%;\\n\\t}\\n\\t50% {\\n\\t\\tbackground-position: 100% 50%;\\n\\t}\\n\\t100% {\\n\\t\\tbackground-position: 0% 50%;\\n\\t}\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0IsRUFBRSxzQ0FBc0M7RUFDMUQsYUFBYTtFQUNiLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxPQUFPO0VBQ1AsY0FBYztBQUNoQjs7QUFFQTtFQUNFLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLG1DQUFtQztBQUNyQzs7QUFFQSw0QkFBNEI7QUFDNUI7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCxhQUFhLEVBQUUsNERBQTREO0VBQzNFLGNBQWMsRUFBRSw2REFBNkQ7RUFDN0UsZ0NBQWdDLEVBQUUsMkJBQTJCO0VBQzdELHVCQUF1QjtFQUN2QixtQkFBbUIsRUFBRSx5QkFBeUI7RUFDOUMsYUFBYSxFQUFFLHNCQUFzQjtFQUNyQywwQ0FBMEMsRUFBRSxvQ0FBb0M7QUFDbEY7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyxhQUFhO0VBQ2IsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7Ozs7O0FBS0E7Q0FDQyx1RUFBdUU7Q0FDdkUsMEJBQTBCO0NBRWxCLG9DQUFvQztBQUM3Qzs7QUFjQTtDQUNDO0VBQ0MsMkJBQTJCO0NBQzVCO0NBQ0E7RUFDQyw2QkFBNkI7Q0FDOUI7Q0FDQTtFQUNDLDJCQUEyQjtDQUM1QjtBQUNEOzs7QUFHQTtDQUNDLHVFQUF1RTtDQUN2RSwwQkFBMEI7Q0FFbEIsb0NBQW9DO0FBQzdDOztBQWNBO0NBQ0M7RUFDQywyQkFBMkI7Q0FDNUI7Q0FDQTtFQUNDLDZCQUE2QjtDQUM5QjtDQUNBO0VBQ0MsMkJBQTJCO0NBQzVCO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIuZ2FtZS1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgLyogUGFyYSBwb3NpY2lvbmFyIGVsIHRhYmxlcm8gZW5jaW1hICovXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5wbGF5ZXItc2VjdGlvbiB7XHJcbiAgZmxleDogMTtcclxuICBmb250LXNpemU6IDJlbTtcclxufVxyXG5cclxuLmJnLWJsdWUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMDcsIDE3NSwgMjM2KTtcclxufVxyXG5cclxuLmJnLXB1cnBsZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIyOCwgMTU2LCA4OSk7XHJcbn1cclxuXHJcbi8qIEVzdGlsb3MgcGFyYSBlbCB0YWJsZXJvICovXHJcbi5ib2FyZC1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgd2lkdGg6IDUwdm1pbjsgLyogQW5jaG8gYmFzYWRvIGVuIGxhIGRpbWVuc2nDg8KzbiBtw4PCoXMgcGVxdWXDg8KxYSBkZSBsYSBwYW50YWxsYSAqL1xyXG4gIGhlaWdodDogNTB2bWluOyAvKiBBbHR1cmEgYmFzYWRhIGVuIGxhIGRpbWVuc2nDg8KzbiBtw4PCoXMgcGVxdWXDg8KxYSBkZSBsYSBwYW50YWxsYSAqL1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyAvKiBDZW50cmFyIGVuIGxhIHBhbnRhbGxhICovXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDsgLyogRXNxdWluYXMgcmVkb25kZWFkYXMgKi9cclxuICBwYWRkaW5nOiAyMHB4OyAvKiBFc3BhY2lhZG8gaW50ZXJubyAqL1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxNXB4IHJnYmEoNjIsIDYyLCA2MiwgMC41KTsgLyogU29tYnJhIHBhcmEgZGFyIGVmZWN0byBmbG90YW50ZSAqL1xyXG59XHJcblxyXG4udHJlcy1lbi1yYXlhIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxufVxyXG5cclxuLnRyZXMtZW4tcmF5YSB0ZCB7XHJcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDQ2LCA0NiwgNDYpO1xyXG4gIHdpZHRoOiAzMy4zMyU7XHJcbiAgaGVpZ2h0OiAzMy4zMyU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMS41ZW07XHJcbn1cclxuXHJcbi50cmVzLWVuLXJheWEgdHI6Zmlyc3QtY2hpbGQgdGQge1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbn1cclxuXHJcbi50cmVzLWVuLXJheWEgdHI6bGFzdC1jaGlsZCB0ZCB7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxufVxyXG5cclxuLnRyZXMtZW4tcmF5YSB0ZDpmaXJzdC1jaGlsZCB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbn1cclxuXHJcbi50cmVzLWVuLXJheWEgdGQ6bGFzdC1jaGlsZCB7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG59XHJcblxyXG5cclxuXHJcblxyXG4uZGVncmFkYWRvWCB7XHJcblx0YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KC00NWRlZywgIzAwYTc0MCwgIzIxZDM3YSwgIzIzYzBkNSwgIzA1OGJmOCk7XHJcblx0YmFja2dyb3VuZC1zaXplOiA0MDAlIDQwMCU7XHJcblx0LXdlYmtpdC1hbmltYXRpb246IGdyYWRpZW50IDNzIGVhc2UgaW5maW5pdGU7XHJcblx0ICAgICAgICBhbmltYXRpb246IGdyYWRpZW50IDNzIGVhc2UgaW5maW5pdGU7XHJcbn1cclxuXHJcbkAtd2Via2l0LWtleWZyYW1lcyBncmFkaWVudCB7XHJcblx0MCUge1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMCUgNTAlO1xyXG5cdH1cclxuXHQ1MCUge1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSA1MCU7XHJcblx0fVxyXG5cdDEwMCUge1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMCUgNTAlO1xyXG5cdH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBncmFkaWVudCB7XHJcblx0MCUge1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMCUgNTAlO1xyXG5cdH1cclxuXHQ1MCUge1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSA1MCU7XHJcblx0fVxyXG5cdDEwMCUge1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMCUgNTAlO1xyXG5cdH1cclxufVxyXG5cclxuXHJcbi5kZWdyYWRhZG9ZIHtcclxuXHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoLTQ1ZGVnLCAjZGU5MzA4LCAjZjZhODE4LCAjZDU2NDIzLCAjZTg0OTQ5KTtcclxuXHRiYWNrZ3JvdW5kLXNpemU6IDQwMCUgNDAwJTtcclxuXHQtd2Via2l0LWFuaW1hdGlvbjogZ3JhZGllbnQgM3MgZWFzZSBpbmZpbml0ZTtcclxuXHQgICAgICAgIGFuaW1hdGlvbjogZ3JhZGllbnQgM3MgZWFzZSBpbmZpbml0ZTtcclxufVxyXG5cclxuQC13ZWJraXQta2V5ZnJhbWVzIGdyYWRpZW50IHtcclxuXHQwJSB7XHJcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7XHJcblx0fVxyXG5cdDUwJSB7XHJcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTtcclxuXHR9XHJcblx0MTAwJSB7XHJcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7XHJcblx0fVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGdyYWRpZW50IHtcclxuXHQwJSB7XHJcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7XHJcblx0fVxyXG5cdDUwJSB7XHJcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTtcclxuXHR9XHJcblx0MTAwJSB7XHJcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA1MCU7XHJcblx0fVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","player","nombre","ctx_r1","opponent","ctx_r2","ctx_r3","ɵɵlistener","GameComponent_tr_9_td_1_Template_td_click_0_listener","restoredCtx","ɵɵrestoreView","_r10","col_r7","$implicit","row_r5","ɵɵnextContext","ctx_r8","ɵɵresetView","makeMove","ɵɵtextInterpolate1","ctx_r6","board","ɵɵtemplate","GameComponent_tr_9_td_1_Template","ɵɵproperty","ɵɵpureFunction0","_c0","GameComponent","constructor","http","socketService","baseUrl","gameOver","ngOnInit","playerLocalStorage","localStorage","getItem","JSON","parse","get","id","subscribe","game","playerXid","currentPlayer","playerOid","playerX","listen","newPlayer","checkWinner","row","col","turn","boardString","stringify","nextTurn","updateBoard","gameData","put","updateGame","emit","error","console","winningCombinations","combination","isDraw","flat","every","cell","_","ɵɵdirectiveInject","i1","HttpClient","i2","SocketService","_2","selectors","decls","vars","consts","template","GameComponent_Template","rf","ctx","GameComponent_div_2_Template","GameComponent_div_3_Template","GameComponent_div_5_Template","GameComponent_div_6_Template","GameComponent_tr_9_Template","ɵɵpureFunction1","_c1","_c2"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\game\\game.component.ts","C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\game\\game.component.html"],"sourcesContent":["//game.component.ts\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SocketService } from '../socket.service'; // Asegúrate de importar tu servicio\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Player, Game } from '../models/interfaces.model';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n  private baseUrl: string = 'http://localhost:3000/';\r\n  board: string[][] = [\r\n    ['', '', ''],\r\n    ['', '', ''],\r\n    ['', '', '']\r\n  ];\r\n  player: any;\r\n  game: any;\r\n  opponent: any;\r\n  currentPlayer: any;\r\n  gameOver: boolean = false;\r\n\r\n  constructor (private http: HttpClient, private socketService: SocketService){}\r\n\r\n  ngOnInit(): void{\r\n    let playerLocalStorage = localStorage.getItem('player');\r\n    if(playerLocalStorage){\r\n      this.player = JSON.parse(playerLocalStorage);\r\n    }\r\n\r\n    // Carga el juego en funcion del usuario que se acaba de registrar con el local storage\r\n    this.http.get<Game>(`${this.baseUrl}game/playerGame/${this.player.id}`).subscribe((game)=>{\r\n      this.game = game;\r\n      this.board = JSON.parse(game.board);\r\n\r\n      //Comprobar si Somos X o O\r\n      if (this.game.playerXid === this.player.id) {\r\n        this.currentPlayer = 'X';\r\n\r\n      } else if (this.game.playerOid === this.player.id) {\r\n        this.currentPlayer = 'O';\r\n\r\n        this.http.get<Player>(`${this.baseUrl}player/${this.game.playerXid}`).subscribe((playerX) => {\r\n          this.opponent = playerX;\r\n       });\r\n\r\n      }\r\n    })\r\n\r\n    this.socketService.listen('player-connected').subscribe(newPlayer => {\r\n      this.opponent = newPlayer;\r\n    });\r\n\r\n    this.socketService.listen('game-updated').subscribe(game => {\r\n      this.game = game;\r\n      this.board = JSON.parse(this.game.board);\r\n      this.checkWinner();\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  makeMove(row: number, col: number): void {\r\n    //Compruebo si hay oponente\r\n    if (!this.opponent) {\r\n        return;\r\n    }\r\n\r\n    //Compruebo si el juego está terminado\r\n    if (this.gameOver) {\r\n      return;\r\n    }\r\n\r\n    //\r\n    if (this.board[row][col] !== '') {\r\n        return;\r\n    }\r\n\r\n    if (this.game.turn === 'O' && this.game.playerXid === this.player.id) {\r\n      return;\r\n    }\r\n\r\n    if (this.game.turn === 'X' && this.game.playerOid === this.player.id) {\r\n      return;\r\n    }\r\n\r\n    if (this.game.turn === 'X' && this.game.playerXid === this.player.id) {\r\n        this.board[row][col] = 'X';\r\n    }\r\n    else if (this.game.turn === 'O' && this.game.playerOid === this.player.id) {\r\n        this.board[row][col] = 'O';\r\n    }\r\n\r\n    // Continúa con la actualización del tablero en el servidor\r\n    let boardString = JSON.stringify(this.board);\r\n    let nextTurn = this.game.turn === 'X' ? 'O' : 'X';\r\n    this.updateBoard(boardString, nextTurn);\r\n\r\n    this.checkWinner();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  updateBoard(board: string, turn: string) {\r\n    const gameData = {\r\n        board: board,\r\n        turn: turn,\r\n    }\r\n\r\n    this.http.put<Game>(`${this.baseUrl}game/${this.game.id}`, gameData).subscribe(\r\n        updateGame => {\r\n            this.socketService.emit(\"game-updated\", updateGame);\r\n            this.checkWinner();\r\n\r\n        },\r\n        error => {\r\n            console.error('Error al actualizar el juego:', error);\r\n        }\r\n    );\r\n  }\r\n\r\n  checkWinner(): string | null {\r\n    // Comprobar filas, columnas y diagonales\r\n    const winningCombinations = [\r\n        // Filas\r\n        [this.board[0][0], this.board[0][1], this.board[0][2]],\r\n        [this.board[1][0], this.board[1][1], this.board[1][2]],\r\n        [this.board[2][0], this.board[2][1], this.board[2][2]],\r\n        // Columnas\r\n        [this.board[0][0], this.board[1][0], this.board[2][0]],\r\n        [this.board[0][1], this.board[1][1], this.board[2][1]],\r\n        [this.board[0][2], this.board[1][2], this.board[2][2]],\r\n        // Diagonales\r\n        [this.board[0][0], this.board[1][1], this.board[2][2]],\r\n        [this.board[0][2], this.board[1][1], this.board[2][0]]\r\n    ];\r\n\r\n    for (let combination of winningCombinations) {\r\n        if (combination[0] && combination[0] === combination[1] && combination[1] === combination[2]) {\r\n            this.gameOver = true;\r\n            return combination[0]; // Retorna 'X' o 'O' según el ganador\r\n        }\r\n    }\r\n\r\n    // Comprobar empate: si no hay ninguna celda vacía y no hay ganador\r\n    const isDraw = this.board.flat().every(cell => cell !== '');\r\n    if (isDraw) {\r\n        this.gameOver = true;\r\n        return 'Draw';\r\n    }\r\n\r\n    return null; // No hay ganador ni empate aún\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"game-container\">\r\n  <div class=\"player-section bg-blue d-flex align-items-center justify-content-center\" [ngClass]=\"{'degradadoX': game?.turn === 'X'}\">\r\n    <div *ngIf=\"currentPlayer === 'X'\">\r\n      <h1>{{ player.nombre }}</h1>\r\n      <h2>Tu Turno</h2>\r\n    </div>\r\n    <div *ngIf=\"currentPlayer === 'O'\">\r\n      <h1>{{ opponent?.nombre }}</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"player-section bg-purple d-flex align-items-center justify-content-center\" [ngClass]=\"{'degradadoY': game?.turn === 'O'}\">\r\n    <div *ngIf=\"currentPlayer === 'X'\">\r\n      <h1>{{ opponent?.nombre }}</h1>\r\n\r\n    </div>\r\n    <div *ngIf=\"currentPlayer === 'O'\">\r\n      <h1>{{ player.nombre }}</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"board-container\">\r\n    <table class=\"tres-en-raya\">\r\n      <tr *ngFor=\"let row of [0, 1, 2]\">\r\n        <td *ngFor=\"let col of [0, 1, 2]\" (click)=\"makeMove(row, col)\">\r\n          {{ board[row][col] }}\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n"],"mappings":";;;;;;ICEIA,EAAA,CAAAC,cAAA,UAAmC;IAC7BD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IADbH,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,MAAA,CAAAC,MAAA,CAAmB;;;;;IAGzBR,EAAA,CAAAC,cAAA,UAAmC;IAC7BD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAA3BH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,iBAAA,CAAAI,MAAA,CAAAC,QAAA,kBAAAD,MAAA,CAAAC,QAAA,CAAAF,MAAA,CAAsB;;;;;IAK5BR,EAAA,CAAAC,cAAA,UAAmC;IAC7BD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAA3BH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,iBAAA,CAAAM,MAAA,CAAAD,QAAA,kBAAAC,MAAA,CAAAD,QAAA,CAAAF,MAAA,CAAsB;;;;;IAG5BR,EAAA,CAAAC,cAAA,UAAmC;IAC7BD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAxBH,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,iBAAA,CAAAO,MAAA,CAAAL,MAAA,CAAAC,MAAA,CAAmB;;;;;;IAOrBR,EAAA,CAAAC,cAAA,YAA+D;IAA7BD,EAAA,CAAAa,UAAA,mBAAAC,qDAAA;MAAA,MAAAC,WAAA,GAAAf,EAAA,CAAAgB,aAAA,CAAAC,IAAA;MAAA,MAAAC,MAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAApB,EAAA,CAAAqB,aAAA,GAAAF,SAAA;MAAA,MAAAG,MAAA,GAAAtB,EAAA,CAAAqB,aAAA;MAAA,OAASrB,EAAA,CAAAuB,WAAA,CAAAD,MAAA,CAAAE,QAAA,CAAAJ,MAAA,EAAAF,MAAA,CAAkB;IAAA,EAAC;IAC5DlB,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;;;IADHH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAyB,kBAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAP,MAAA,EAAAF,MAAA,OACF;;;;;;;;IAHFlB,EAAA,CAAAC,cAAA,SAAkC;IAChCD,EAAA,CAAA4B,UAAA,IAAAC,gCAAA,gBAEK;IACP7B,EAAA,CAAAG,YAAA,EAAK;;;IAHiBH,EAAA,CAAAI,SAAA,GAAY;IAAZJ,EAAA,CAAA8B,UAAA,YAAA9B,EAAA,CAAA+B,eAAA,IAAAC,GAAA,EAAY;;;;;;;;;;;;;ADZxC,OAAM,MAAOC,aAAa;EAaxBC,YAAqBC,IAAgB,EAAUC,aAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IAZpD,KAAAC,OAAO,GAAW,wBAAwB;IAClD,KAAAV,KAAK,GAAe,CAClB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CACb;IAKD,KAAAW,QAAQ,GAAY,KAAK;EAEoD;EAE7EC,QAAQA,CAAA;IACN,IAAIC,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACvD,IAAGF,kBAAkB,EAAC;MACpB,IAAI,CAACjC,MAAM,GAAGoC,IAAI,CAACC,KAAK,CAACJ,kBAAkB,CAAC;;IAG9C;IACA,IAAI,CAACL,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACR,OAAO,mBAAmB,IAAI,CAAC9B,MAAM,CAACuC,EAAE,EAAE,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAG;MACxF,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACrB,KAAK,GAAGgB,IAAI,CAACC,KAAK,CAACI,IAAI,CAACrB,KAAK,CAAC;MAEnC;MACA,IAAI,IAAI,CAACqB,IAAI,CAACC,SAAS,KAAK,IAAI,CAAC1C,MAAM,CAACuC,EAAE,EAAE;QAC1C,IAAI,CAACI,aAAa,GAAG,GAAG;OAEzB,MAAM,IAAI,IAAI,CAACF,IAAI,CAACG,SAAS,KAAK,IAAI,CAAC5C,MAAM,CAACuC,EAAE,EAAE;QACjD,IAAI,CAACI,aAAa,GAAG,GAAG;QAExB,IAAI,CAACf,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACR,OAAO,UAAU,IAAI,CAACW,IAAI,CAACC,SAAS,EAAE,CAAC,CAACF,SAAS,CAAEK,OAAO,IAAI;UAC1F,IAAI,CAAC1C,QAAQ,GAAG0C,OAAO;QAC1B,CAAC,CAAC;;IAGL,CAAC,CAAC;IAEF,IAAI,CAAChB,aAAa,CAACiB,MAAM,CAAC,kBAAkB,CAAC,CAACN,SAAS,CAACO,SAAS,IAAG;MAClE,IAAI,CAAC5C,QAAQ,GAAG4C,SAAS;IAC3B,CAAC,CAAC;IAEF,IAAI,CAAClB,aAAa,CAACiB,MAAM,CAAC,cAAc,CAAC,CAACN,SAAS,CAACC,IAAI,IAAG;MACzD,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACrB,KAAK,GAAGgB,IAAI,CAACC,KAAK,CAAC,IAAI,CAACI,IAAI,CAACrB,KAAK,CAAC;MACxC,IAAI,CAAC4B,WAAW,EAAE;IACpB,CAAC,CAAC;EAIJ;EAGA/B,QAAQA,CAACgC,GAAW,EAAEC,GAAW;IAC/B;IACA,IAAI,CAAC,IAAI,CAAC/C,QAAQ,EAAE;MAChB;;IAGJ;IACA,IAAI,IAAI,CAAC4B,QAAQ,EAAE;MACjB;;IAGF;IACA,IAAI,IAAI,CAACX,KAAK,CAAC6B,GAAG,CAAC,CAACC,GAAG,CAAC,KAAK,EAAE,EAAE;MAC7B;;IAGJ,IAAI,IAAI,CAACT,IAAI,CAACU,IAAI,KAAK,GAAG,IAAI,IAAI,CAACV,IAAI,CAACC,SAAS,KAAK,IAAI,CAAC1C,MAAM,CAACuC,EAAE,EAAE;MACpE;;IAGF,IAAI,IAAI,CAACE,IAAI,CAACU,IAAI,KAAK,GAAG,IAAI,IAAI,CAACV,IAAI,CAACG,SAAS,KAAK,IAAI,CAAC5C,MAAM,CAACuC,EAAE,EAAE;MACpE;;IAGF,IAAI,IAAI,CAACE,IAAI,CAACU,IAAI,KAAK,GAAG,IAAI,IAAI,CAACV,IAAI,CAACC,SAAS,KAAK,IAAI,CAAC1C,MAAM,CAACuC,EAAE,EAAE;MAClE,IAAI,CAACnB,KAAK,CAAC6B,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,GAAG;KAC7B,MACI,IAAI,IAAI,CAACT,IAAI,CAACU,IAAI,KAAK,GAAG,IAAI,IAAI,CAACV,IAAI,CAACG,SAAS,KAAK,IAAI,CAAC5C,MAAM,CAACuC,EAAE,EAAE;MACvE,IAAI,CAACnB,KAAK,CAAC6B,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,GAAG;;IAG9B;IACA,IAAIE,WAAW,GAAGhB,IAAI,CAACiB,SAAS,CAAC,IAAI,CAACjC,KAAK,CAAC;IAC5C,IAAIkC,QAAQ,GAAG,IAAI,CAACb,IAAI,CAACU,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;IACjD,IAAI,CAACI,WAAW,CAACH,WAAW,EAAEE,QAAQ,CAAC;IAEvC,IAAI,CAACN,WAAW,EAAE;EACtB;EAMEO,WAAWA,CAACnC,KAAa,EAAE+B,IAAY;IACrC,MAAMK,QAAQ,GAAG;MACbpC,KAAK,EAAEA,KAAK;MACZ+B,IAAI,EAAEA;KACT;IAED,IAAI,CAACvB,IAAI,CAAC6B,GAAG,CAAO,GAAG,IAAI,CAAC3B,OAAO,QAAQ,IAAI,CAACW,IAAI,CAACF,EAAE,EAAE,EAAEiB,QAAQ,CAAC,CAAChB,SAAS,CAC1EkB,UAAU,IAAG;MACT,IAAI,CAAC7B,aAAa,CAAC8B,IAAI,CAAC,cAAc,EAAED,UAAU,CAAC;MACnD,IAAI,CAACV,WAAW,EAAE;IAEtB,CAAC,EACDY,KAAK,IAAG;MACJC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD,CAAC,CACJ;EACH;EAEAZ,WAAWA,CAAA;IACT;IACA,MAAMc,mBAAmB,GAAG;IACxB;IACA,CAAC,IAAI,CAAC1C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACtD,CAAC,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACtD,CAAC,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD;IACA,CAAC,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACtD,CAAC,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACtD,CAAC,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD;IACA,CAAC,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACtD,CAAC,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACzD;IAED,KAAK,IAAI2C,WAAW,IAAID,mBAAmB,EAAE;MACzC,IAAIC,WAAW,CAAC,CAAC,CAAC,IAAIA,WAAW,CAAC,CAAC,CAAC,KAAKA,WAAW,CAAC,CAAC,CAAC,IAAIA,WAAW,CAAC,CAAC,CAAC,KAAKA,WAAW,CAAC,CAAC,CAAC,EAAE;QAC1F,IAAI,CAAChC,QAAQ,GAAG,IAAI;QACpB,OAAOgC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;;;IAI/B;IACA,MAAMC,MAAM,GAAG,IAAI,CAAC5C,KAAK,CAAC6C,IAAI,EAAE,CAACC,KAAK,CAACC,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC;IAC3D,IAAIH,MAAM,EAAE;MACR,IAAI,CAACjC,QAAQ,GAAG,IAAI;MACpB,OAAO,MAAM;;IAGjB,OAAO,IAAI,CAAC,CAAC;EACjB;EAAC,QAAAqC,CAAA,G;qBAnJY1C,aAAa,EAAAjC,EAAA,CAAA4E,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAA9E,EAAA,CAAA4E,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbhD,aAAa;IAAAiD,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ1BxF,EAAA,CAAAC,cAAA,aAA4B;QAExBD,EAAA,CAAA4B,UAAA,IAAA8D,4BAAA,iBAGM;QACN1F,EAAA,CAAA4B,UAAA,IAAA+D,4BAAA,iBAEM;QACR3F,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,aAAsI;QACpID,EAAA,CAAA4B,UAAA,IAAAgE,4BAAA,iBAGM;QACN5F,EAAA,CAAA4B,UAAA,IAAAiE,4BAAA,iBAEM;QACR7F,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,aAA6B;QAEzBD,EAAA,CAAA4B,UAAA,IAAAkE,2BAAA,gBAIK;QACP9F,EAAA,CAAAG,YAAA,EAAQ;;;QA3B2EH,EAAA,CAAAI,SAAA,GAA8C;QAA9CJ,EAAA,CAAA8B,UAAA,YAAA9B,EAAA,CAAA+F,eAAA,IAAAC,GAAA,GAAAP,GAAA,CAAAzC,IAAA,kBAAAyC,GAAA,CAAAzC,IAAA,CAAAU,IAAA,WAA8C;QAC3H1D,EAAA,CAAAI,SAAA,GAA2B;QAA3BJ,EAAA,CAAA8B,UAAA,SAAA2D,GAAA,CAAAvC,aAAA,SAA2B;QAI3BlD,EAAA,CAAAI,SAAA,GAA2B;QAA3BJ,EAAA,CAAA8B,UAAA,SAAA2D,GAAA,CAAAvC,aAAA,SAA2B;QAKoDlD,EAAA,CAAAI,SAAA,GAA8C;QAA9CJ,EAAA,CAAA8B,UAAA,YAAA9B,EAAA,CAAA+F,eAAA,IAAAE,GAAA,GAAAR,GAAA,CAAAzC,IAAA,kBAAAyC,GAAA,CAAAzC,IAAA,CAAAU,IAAA,WAA8C;QAC7H1D,EAAA,CAAAI,SAAA,GAA2B;QAA3BJ,EAAA,CAAA8B,UAAA,SAAA2D,GAAA,CAAAvC,aAAA,SAA2B;QAI3BlD,EAAA,CAAAI,SAAA,GAA2B;QAA3BJ,EAAA,CAAA8B,UAAA,SAAA2D,GAAA,CAAAvC,aAAA,SAA2B;QAOXlD,EAAA,CAAAI,SAAA,GAAY;QAAZJ,EAAA,CAAA8B,UAAA,YAAA9B,EAAA,CAAA+B,eAAA,KAAAC,GAAA,EAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { EntityManager } from \"./EntityManager\";\nimport { MongoEntityManager } from \"./MongoEntityManager\";\nimport { SqljsEntityManager } from \"./SqljsEntityManager\";\n/**\n * Helps to create entity managers.\n */\nexport class EntityManagerFactory {\n  /**\n   * Creates a new entity manager depend on a given connection's driver.\n   */\n  create(connection, queryRunner) {\n    if (connection.driver.options.type === \"mongodb\") return new MongoEntityManager(connection);\n    if (connection.driver.options.type === \"sqljs\") return new SqljsEntityManager(connection, queryRunner);\n    return new EntityManager(connection, queryRunner);\n  }\n}","map":{"version":3,"names":["EntityManager","MongoEntityManager","SqljsEntityManager","EntityManagerFactory","create","connection","queryRunner","driver","options","type"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/entity-manager/EntityManagerFactory.js"],"sourcesContent":["import { EntityManager } from \"./EntityManager\";\nimport { MongoEntityManager } from \"./MongoEntityManager\";\nimport { SqljsEntityManager } from \"./SqljsEntityManager\";\n/**\n * Helps to create entity managers.\n */\nexport class EntityManagerFactory {\n    /**\n     * Creates a new entity manager depend on a given connection's driver.\n     */\n    create(connection, queryRunner) {\n        if (connection.driver.options.type === \"mongodb\")\n            return new MongoEntityManager(connection);\n        if (connection.driver.options.type === \"sqljs\")\n            return new SqljsEntityManager(connection, queryRunner);\n        return new EntityManager(connection, queryRunner);\n    }\n}\n\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,CAAC;EAC9B;AACJ;AACA;EACIC,MAAMA,CAACC,UAAU,EAAEC,WAAW,EAAE;IAC5B,IAAID,UAAU,CAACE,MAAM,CAACC,OAAO,CAACC,IAAI,KAAK,SAAS,EAC5C,OAAO,IAAIR,kBAAkB,CAACI,UAAU,CAAC;IAC7C,IAAIA,UAAU,CAACE,MAAM,CAACC,OAAO,CAACC,IAAI,KAAK,OAAO,EAC1C,OAAO,IAAIP,kBAAkB,CAACG,UAAU,EAAEC,WAAW,CAAC;IAC1D,OAAO,IAAIN,aAAa,CAACK,UAAU,EAAEC,WAAW,CAAC;EACrD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
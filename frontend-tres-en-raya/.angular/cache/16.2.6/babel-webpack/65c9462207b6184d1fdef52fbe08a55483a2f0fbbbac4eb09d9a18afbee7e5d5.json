{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let GameComponent = class GameComponent {\n  constructor(http, socketService, gameService) {\n    this.http = http;\n    this.socketService = socketService;\n    this.gameService = gameService;\n    this.baseUrl = 'http://localhost:3000/';\n    this.board = [['', '', ''], ['', '', ''], ['', '', '']];\n    this.playerId = 0;\n  }\n  ngOnInit() {\n    let playerLocalStorage = localStorage.getItem('player');\n    if (playerLocalStorage) {\n      this.player = JSON.parse(playerLocalStorage);\n    }\n    this.http.get(`${this.baseUrl}game/playerGame/${this.player.id}`).subscribe(game => {\n      this.game = game;\n      this.board = JSON.parse(game.board);\n    });\n    this.socketService.listen('new-player').subscribe(newPlayer => {\n      this.opponent = newPlayer;\n    });\n  }\n  makeMove(row, col) {\n    switch (this.game.turn) {\n      case \"X\":\n        if (this.game.playerXid === this.player.id) {\n          this.board[row][col] = \"X\";\n          let boardString = JSON.stringify(this.board);\n          this.updateBoard(boardString, 'O');\n        }\n        break;\n      case \"O\":\n        if (this.game.playerOid === this.player.id) {\n          this.board[row][col] = \"O\";\n        }\n        break;\n      default:\n        break;\n    }\n    this.game.turn === \"X\" ? \"O\" : \"X\";\n  }\n  updateBoard(board, turn) {\n    console.log('entrando update');\n    const gameData = {\n      board: board,\n      turn: turn\n    };\n    return this.http.put(`${this.baseUrl}game/${this.game.id}`, gameData);\n  }\n};\nGameComponent = __decorate([Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})], GameComponent);","map":{"version":3,"names":["Component","GameComponent","constructor","http","socketService","gameService","baseUrl","board","playerId","ngOnInit","playerLocalStorage","localStorage","getItem","player","JSON","parse","get","id","subscribe","game","listen","newPlayer","opponent","makeMove","row","col","turn","playerXid","boardString","stringify","updateBoard","playerOid","console","log","gameData","put","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\practicas\\Downloads\\angular\\tresOnline\\frontend-tres-en-raya\\src\\app\\game\\game.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../socket.service'; // Aseg√∫rate de importar tu servicio\nimport { HttpClient } from '@angular/common/http';\nimport { Player, Game } from '../models/interfaces.model';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n  constructor (private http: HttpClient, private socketService: SocketService, private gameService: GameService){}\n\n  private baseUrl: string = 'http://localhost:3000/';\n  board: string[][] = [\n    ['', '', ''],\n    ['', '', ''],\n    ['', '', '']\n  ];\n  player: any;\n  playerId: number = 0;\n  game: any;\n  opponent: any;\n\n\n  ngOnInit(): void{\n    let playerLocalStorage = localStorage.getItem('player');\n    if(playerLocalStorage){\n      this.player = JSON.parse(playerLocalStorage);\n\n    }\n    this.http.get<Game>(`${this.baseUrl}game/playerGame/${this.player.id}`).subscribe((game)=>{\n      this.game = game;\n      this.board = JSON.parse(game.board);\n    })\n\n    this.socketService.listen('new-player').subscribe(newPlayer => {\n      this.opponent = newPlayer;\n    });\n  }\n\n\n  makeMove(row: number, col: number): void{\n    switch(this.game.turn){\n      case \"X\":\n        if(this.game.playerXid === this.player.id){\n          this.board[row][col] = \"X\"\n          let boardString = JSON.stringify(this.board);\n\n          this.updateBoard(boardString, 'O');\n        }\n        break;\n      case \"O\":\n        if(this.game.playerOid === this.player.id){\n          this.board[row][col] = \"O\"\n        }\n        break;\n      default:\n        break;\n    }\n    this.game.turn === \"X\" ? \"O\" : \"X\"\n\n  }\n\n  updateBoard(board: string, turn: string){\n    console.log('entrando update');\n\n    const gameData = {\n      board: board,\n      turn: turn,\n    }\n    return this.http.put(`${this.baseUrl}game/${this.game.id}`, gameData);\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EACxBC,YAAqBC,IAAgB,EAAUC,aAA4B,EAAUC,WAAwB;IAAxF,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IAAyB,KAAAC,WAAW,GAAXA,WAAW;IAExF,KAAAC,OAAO,GAAW,wBAAwB;IAClD,KAAAC,KAAK,GAAe,CAClB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CACb;IAED,KAAAC,QAAQ,GAAW,CAAC;EAT2F;EAc/GC,QAAQA,CAAA;IACN,IAAIC,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACvD,IAAGF,kBAAkB,EAAC;MACpB,IAAI,CAACG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,kBAAkB,CAAC;;IAG9C,IAAI,CAACP,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACV,OAAO,mBAAmB,IAAI,CAACO,MAAM,CAACI,EAAE,EAAE,CAAC,CAACC,SAAS,CAAEC,IAAI,IAAG;MACxF,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACZ,KAAK,GAAGO,IAAI,CAACC,KAAK,CAACI,IAAI,CAACZ,KAAK,CAAC;IACrC,CAAC,CAAC;IAEF,IAAI,CAACH,aAAa,CAACgB,MAAM,CAAC,YAAY,CAAC,CAACF,SAAS,CAACG,SAAS,IAAG;MAC5D,IAAI,CAACC,QAAQ,GAAGD,SAAS;IAC3B,CAAC,CAAC;EACJ;EAGAE,QAAQA,CAACC,GAAW,EAAEC,GAAW;IAC/B,QAAO,IAAI,CAACN,IAAI,CAACO,IAAI;MACnB,KAAK,GAAG;QACN,IAAG,IAAI,CAACP,IAAI,CAACQ,SAAS,KAAK,IAAI,CAACd,MAAM,CAACI,EAAE,EAAC;UACxC,IAAI,CAACV,KAAK,CAACiB,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,GAAG;UAC1B,IAAIG,WAAW,GAAGd,IAAI,CAACe,SAAS,CAAC,IAAI,CAACtB,KAAK,CAAC;UAE5C,IAAI,CAACuB,WAAW,CAACF,WAAW,EAAE,GAAG,CAAC;;QAEpC;MACF,KAAK,GAAG;QACN,IAAG,IAAI,CAACT,IAAI,CAACY,SAAS,KAAK,IAAI,CAAClB,MAAM,CAACI,EAAE,EAAC;UACxC,IAAI,CAACV,KAAK,CAACiB,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,GAAG;;QAE5B;MACF;QACE;;IAEJ,IAAI,CAACN,IAAI,CAACO,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EAEpC;EAEAI,WAAWA,CAACvB,KAAa,EAAEmB,IAAY;IACrCM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAE9B,MAAMC,QAAQ,GAAG;MACf3B,KAAK,EAAEA,KAAK;MACZmB,IAAI,EAAEA;KACP;IACD,OAAO,IAAI,CAACvB,IAAI,CAACgC,GAAG,CAAC,GAAG,IAAI,CAAC7B,OAAO,QAAQ,IAAI,CAACa,IAAI,CAACF,EAAE,EAAE,EAAEiB,QAAQ,CAAC;EACvE;CAGD;AAjEYjC,aAAa,GAAAmC,UAAA,EALzBpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWtC,aAAa,CAiEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * Performs logging of the events in TypeORM.\n * This version of logger logs everything into ormlogs.log file.\n */\nexport class DummyLogger {\n  /**\n   * Logs query and parameters used in it.\n   */\n  logQuery() {\n    throw new Error('This logger is not applicable in a browser context');\n  }\n  /**\n   * Logs query that is failed.\n   */\n  logQueryError() {\n    throw new Error('This logger is not applicable in a browser context');\n  }\n  /**\n   * Logs query that is slow.\n   */\n  logQuerySlow() {\n    throw new Error('This logger is not applicable in a browser context');\n  }\n  /**\n   * Logs events from the schema build process.\n   */\n  logSchemaBuild() {\n    throw new Error('This logger is not applicable in a browser context');\n  }\n  /**\n   * Logs events from the migrations run process.\n   */\n  logMigration() {\n    throw new Error('This logger is not applicable in a browser context');\n  }\n  /**\n   * Perform logging using given logger, or by default to the console.\n   * Log has its own level and message.\n   */\n  log() {\n    throw new Error('This logger is not applicable in a browser context');\n  }\n}\nexport class FileLogger extends DummyLogger {}","map":{"version":3,"names":["DummyLogger","logQuery","Error","logQueryError","logQuerySlow","logSchemaBuild","logMigration","log","FileLogger"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/platform/BrowserFileLoggerDummy.js"],"sourcesContent":["/**\n * Performs logging of the events in TypeORM.\n * This version of logger logs everything into ormlogs.log file.\n */\nexport class DummyLogger {\n    /**\n     * Logs query and parameters used in it.\n     */\n    logQuery() {\n        throw new Error('This logger is not applicable in a browser context');\n    }\n    /**\n     * Logs query that is failed.\n     */\n    logQueryError() {\n        throw new Error('This logger is not applicable in a browser context');\n    }\n    /**\n     * Logs query that is slow.\n     */\n    logQuerySlow() {\n        throw new Error('This logger is not applicable in a browser context');\n    }\n    /**\n     * Logs events from the schema build process.\n     */\n    logSchemaBuild() {\n        throw new Error('This logger is not applicable in a browser context');\n    }\n    /**\n     * Logs events from the migrations run process.\n     */\n    logMigration() {\n        throw new Error('This logger is not applicable in a browser context');\n    }\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    log() {\n        throw new Error('This logger is not applicable in a browser context');\n    }\n}\nexport class FileLogger extends DummyLogger {\n}\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,WAAW,CAAC;EACrB;AACJ;AACA;EACIC,QAAQA,CAAA,EAAG;IACP,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACzE;EACA;AACJ;AACA;EACIC,aAAaA,CAAA,EAAG;IACZ,MAAM,IAAID,KAAK,CAAC,oDAAoD,CAAC;EACzE;EACA;AACJ;AACA;EACIE,YAAYA,CAAA,EAAG;IACX,MAAM,IAAIF,KAAK,CAAC,oDAAoD,CAAC;EACzE;EACA;AACJ;AACA;EACIG,cAAcA,CAAA,EAAG;IACb,MAAM,IAAIH,KAAK,CAAC,oDAAoD,CAAC;EACzE;EACA;AACJ;AACA;EACII,YAAYA,CAAA,EAAG;IACX,MAAM,IAAIJ,KAAK,CAAC,oDAAoD,CAAC;EACzE;EACA;AACJ;AACA;AACA;EACIK,GAAGA,CAAA,EAAG;IACF,MAAM,IAAIL,KAAK,CAAC,oDAAoD,CAAC;EACzE;AACJ;AACA,OAAO,MAAMM,UAAU,SAASR,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
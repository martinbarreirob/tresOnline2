{"ast":null,"code":"export class ObjectUtils {\n  /**\n   * Checks if given value is an object.\n   * We cannot use instanceof because it has problems when running on different contexts.\n   * And we don't simply use typeof because typeof null === \"object\".\n   */\n  static isObject(val) {\n    return val !== null && typeof val === \"object\";\n  }\n  /**\n   * Checks if given value is an object.\n   * We cannot use instanceof because it has problems when running on different contexts.\n   * And we don't simply use typeof because typeof null === \"object\".\n   */\n  static isObjectWithName(val) {\n    return val !== null && typeof val === \"object\" && val[\"name\"] !== undefined;\n  }\n  /**\n   * Copy the values of all of the enumerable own properties from one or more source objects to a\n   * target object.\n   * @param target The target object to copy to.\n   * @param sources One or more source objects from which to copy properties\n   */\n  static assign(target, ...sources) {\n    for (const source of sources) {\n      for (const prop of Object.getOwnPropertyNames(source)) {\n        ;\n        target[prop] = source[prop];\n      }\n    }\n  }\n  /**\n   * Converts MixedList<T> to strictly an array of its T items.\n   */\n  static mixedListToArray(list) {\n    if (list !== null && typeof list === \"object\") {\n      return Object.keys(list).map(key => list[key]);\n    } else {\n      return list;\n    }\n  }\n}","map":{"version":3,"names":["ObjectUtils","isObject","val","isObjectWithName","undefined","assign","target","sources","source","prop","Object","getOwnPropertyNames","mixedListToArray","list","keys","map","key"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/util/ObjectUtils.js"],"sourcesContent":["export class ObjectUtils {\n    /**\n     * Checks if given value is an object.\n     * We cannot use instanceof because it has problems when running on different contexts.\n     * And we don't simply use typeof because typeof null === \"object\".\n     */\n    static isObject(val) {\n        return val !== null && typeof val === \"object\";\n    }\n    /**\n     * Checks if given value is an object.\n     * We cannot use instanceof because it has problems when running on different contexts.\n     * And we don't simply use typeof because typeof null === \"object\".\n     */\n    static isObjectWithName(val) {\n        return (val !== null && typeof val === \"object\" && val[\"name\"] !== undefined);\n    }\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object.\n     * @param target The target object to copy to.\n     * @param sources One or more source objects from which to copy properties\n     */\n    static assign(target, ...sources) {\n        for (const source of sources) {\n            for (const prop of Object.getOwnPropertyNames(source)) {\n                ;\n                target[prop] = source[prop];\n            }\n        }\n    }\n    /**\n     * Converts MixedList<T> to strictly an array of its T items.\n     */\n    static mixedListToArray(list) {\n        if (list !== null && typeof list === \"object\") {\n            return Object.keys(list).map((key) => list[key]);\n        }\n        else {\n            return list;\n        }\n    }\n}\n\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,CAAC;EACrB;AACJ;AACA;AACA;AACA;EACI,OAAOC,QAAQA,CAACC,GAAG,EAAE;IACjB,OAAOA,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ;EAClD;EACA;AACJ;AACA;AACA;AACA;EACI,OAAOC,gBAAgBA,CAACD,GAAG,EAAE;IACzB,OAAQA,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAAC,MAAM,CAAC,KAAKE,SAAS;EAChF;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,OAAOC,MAAMA,CAACC,MAAM,EAAE,GAAGC,OAAO,EAAE;IAC9B,KAAK,MAAMC,MAAM,IAAID,OAAO,EAAE;MAC1B,KAAK,MAAME,IAAI,IAAIC,MAAM,CAACC,mBAAmB,CAACH,MAAM,CAAC,EAAE;QACnD;QACAF,MAAM,CAACG,IAAI,CAAC,GAAGD,MAAM,CAACC,IAAI,CAAC;MAC/B;IACJ;EACJ;EACA;AACJ;AACA;EACI,OAAOG,gBAAgBA,CAACC,IAAI,EAAE;IAC1B,IAAIA,IAAI,KAAK,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC3C,OAAOH,MAAM,CAACI,IAAI,CAACD,IAAI,CAAC,CAACE,GAAG,CAAEC,GAAG,IAAKH,IAAI,CAACG,GAAG,CAAC,CAAC;IACpD,CAAC,MACI;MACD,OAAOH,IAAI;IACf;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/practicas/Downloads/angular/tresOnline/frontend-tres-en-raya/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\";\nimport { CapacitorQueryRunner } from \"./CapacitorQueryRunner\";\nimport { DriverPackageNotInstalledError } from \"../../error\";\nexport class CapacitorDriver extends AbstractSqliteDriver {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  constructor(connection) {\n    super(connection);\n    this.database = this.options.database;\n    this.driver = this.options.driver;\n    // load sqlite package\n    this.sqlite = this.options.driver;\n  }\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n  /**\n   * Performs connection to the database.\n   */\n  connect() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.databaseConnection = _this.createDatabaseConnection();\n      yield _this.databaseConnection;\n    })();\n  }\n  /**\n   * Closes connection with database.\n   */\n  disconnect() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.queryRunner = undefined;\n      const databaseConnection = yield _this2.databaseConnection;\n      return databaseConnection.close().then(() => {\n        _this2.databaseConnection = undefined;\n      });\n    })();\n  }\n  /**\n   * Creates a query runner used to execute database queries.\n   */\n  createQueryRunner(mode) {\n    if (!this.queryRunner) this.queryRunner = new CapacitorQueryRunner(this);\n    return this.queryRunner;\n  }\n  // -------------------------------------------------------------------------\n  // Protected Methods\n  // -------------------------------------------------------------------------\n  /**\n   * Creates connection with the database.\n   */\n  createDatabaseConnection() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const databaseMode = _this3.options.mode || \"no-encryption\";\n      const isDatabaseEncryted = databaseMode !== \"no-encryption\";\n      const databaseVersion = typeof _this3.options.version === \"undefined\" ? 1 : _this3.options.version;\n      const connection = yield _this3.sqlite.createConnection(_this3.options.database, isDatabaseEncryted, databaseMode, databaseVersion);\n      yield connection.open();\n      // we need to enable foreign keys in sqlite to make sure all foreign key related features\n      // working properly. this also makes onDelete to work with sqlite.\n      yield connection.query(`PRAGMA foreign_keys = ON`);\n      if (_this3.options.journalMode && [\"DELETE\", \"TRUNCATE\", \"PERSIST\", \"MEMORY\", \"WAL\", \"OFF\"].indexOf(_this3.options.journalMode) !== -1) {\n        yield connection.query(`PRAGMA journal_mode = ${_this3.options.journalMode}`);\n      }\n      return connection;\n    })();\n  }\n  loadDependencies() {\n    this.sqlite = this.driver;\n    if (!this.driver) {\n      throw new DriverPackageNotInstalledError(\"Capacitor\", \"@capacitor-community/sqlite\");\n    }\n  }\n}","map":{"version":3,"names":["AbstractSqliteDriver","CapacitorQueryRunner","DriverPackageNotInstalledError","CapacitorDriver","constructor","connection","database","options","driver","sqlite","connect","_this","_asyncToGenerator","databaseConnection","createDatabaseConnection","disconnect","_this2","queryRunner","undefined","close","then","createQueryRunner","mode","_this3","databaseMode","isDatabaseEncryted","databaseVersion","version","createConnection","open","query","journalMode","indexOf","loadDependencies"],"sources":["C:/Users/practicas/Downloads/angular/tresOnline/node_modules/typeorm/browser/driver/capacitor/CapacitorDriver.js"],"sourcesContent":["import { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\";\nimport { CapacitorQueryRunner } from \"./CapacitorQueryRunner\";\nimport { DriverPackageNotInstalledError } from \"../../error\";\nexport class CapacitorDriver extends AbstractSqliteDriver {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(connection) {\n        super(connection);\n        this.database = this.options.database;\n        this.driver = this.options.driver;\n        // load sqlite package\n        this.sqlite = this.options.driver;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    async connect() {\n        this.databaseConnection = this.createDatabaseConnection();\n        await this.databaseConnection;\n    }\n    /**\n     * Closes connection with database.\n     */\n    async disconnect() {\n        this.queryRunner = undefined;\n        const databaseConnection = await this.databaseConnection;\n        return databaseConnection.close().then(() => {\n            this.databaseConnection = undefined;\n        });\n    }\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    createQueryRunner(mode) {\n        if (!this.queryRunner)\n            this.queryRunner = new CapacitorQueryRunner(this);\n        return this.queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    async createDatabaseConnection() {\n        const databaseMode = this.options.mode || \"no-encryption\";\n        const isDatabaseEncryted = databaseMode !== \"no-encryption\";\n        const databaseVersion = typeof this.options.version === \"undefined\"\n            ? 1\n            : this.options.version;\n        const connection = await this.sqlite.createConnection(this.options.database, isDatabaseEncryted, databaseMode, databaseVersion);\n        await connection.open();\n        // we need to enable foreign keys in sqlite to make sure all foreign key related features\n        // working properly. this also makes onDelete to work with sqlite.\n        await connection.query(`PRAGMA foreign_keys = ON`);\n        if (this.options.journalMode &&\n            [\"DELETE\", \"TRUNCATE\", \"PERSIST\", \"MEMORY\", \"WAL\", \"OFF\"].indexOf(this.options.journalMode) !== -1) {\n            await connection.query(`PRAGMA journal_mode = ${this.options.journalMode}`);\n        }\n        return connection;\n    }\n    loadDependencies() {\n        this.sqlite = this.driver;\n        if (!this.driver) {\n            throw new DriverPackageNotInstalledError(\"Capacitor\", \"@capacitor-community/sqlite\");\n        }\n    }\n}\n\n"],"mappings":";AAAA,SAASA,oBAAoB,QAAQ,yCAAyC;AAC9E,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,8BAA8B,QAAQ,aAAa;AAC5D,OAAO,MAAMC,eAAe,SAASH,oBAAoB,CAAC;EACtD;EACA;EACA;EACAI,WAAWA,CAACC,UAAU,EAAE;IACpB,KAAK,CAACA,UAAU,CAAC;IACjB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,OAAO,CAACD,QAAQ;IACrC,IAAI,CAACE,MAAM,GAAG,IAAI,CAACD,OAAO,CAACC,MAAM;IACjC;IACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,OAAO,CAACC,MAAM;EACrC;EACA;EACA;EACA;EACA;AACJ;AACA;EACUE,OAAOA,CAAA,EAAG;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZD,KAAI,CAACE,kBAAkB,GAAGF,KAAI,CAACG,wBAAwB,CAAC,CAAC;MACzD,MAAMH,KAAI,CAACE,kBAAkB;IAAC;EAClC;EACA;AACJ;AACA;EACUE,UAAUA,CAAA,EAAG;IAAA,IAAAC,MAAA;IAAA,OAAAJ,iBAAA;MACfI,MAAI,CAACC,WAAW,GAAGC,SAAS;MAC5B,MAAML,kBAAkB,SAASG,MAAI,CAACH,kBAAkB;MACxD,OAAOA,kBAAkB,CAACM,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;QACzCJ,MAAI,CAACH,kBAAkB,GAAGK,SAAS;MACvC,CAAC,CAAC;IAAC;EACP;EACA;AACJ;AACA;EACIG,iBAAiBA,CAACC,IAAI,EAAE;IACpB,IAAI,CAAC,IAAI,CAACL,WAAW,EACjB,IAAI,CAACA,WAAW,GAAG,IAAIhB,oBAAoB,CAAC,IAAI,CAAC;IACrD,OAAO,IAAI,CAACgB,WAAW;EAC3B;EACA;EACA;EACA;EACA;AACJ;AACA;EACUH,wBAAwBA,CAAA,EAAG;IAAA,IAAAS,MAAA;IAAA,OAAAX,iBAAA;MAC7B,MAAMY,YAAY,GAAGD,MAAI,CAAChB,OAAO,CAACe,IAAI,IAAI,eAAe;MACzD,MAAMG,kBAAkB,GAAGD,YAAY,KAAK,eAAe;MAC3D,MAAME,eAAe,GAAG,OAAOH,MAAI,CAAChB,OAAO,CAACoB,OAAO,KAAK,WAAW,GAC7D,CAAC,GACDJ,MAAI,CAAChB,OAAO,CAACoB,OAAO;MAC1B,MAAMtB,UAAU,SAASkB,MAAI,CAACd,MAAM,CAACmB,gBAAgB,CAACL,MAAI,CAAChB,OAAO,CAACD,QAAQ,EAAEmB,kBAAkB,EAAED,YAAY,EAAEE,eAAe,CAAC;MAC/H,MAAMrB,UAAU,CAACwB,IAAI,CAAC,CAAC;MACvB;MACA;MACA,MAAMxB,UAAU,CAACyB,KAAK,CAAE,0BAAyB,CAAC;MAClD,IAAIP,MAAI,CAAChB,OAAO,CAACwB,WAAW,IACxB,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAACC,OAAO,CAACT,MAAI,CAAChB,OAAO,CAACwB,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;QACpG,MAAM1B,UAAU,CAACyB,KAAK,CAAE,yBAAwBP,MAAI,CAAChB,OAAO,CAACwB,WAAY,EAAC,CAAC;MAC/E;MACA,OAAO1B,UAAU;IAAC;EACtB;EACA4B,gBAAgBA,CAAA,EAAG;IACf,IAAI,CAACxB,MAAM,GAAG,IAAI,CAACD,MAAM;IACzB,IAAI,CAAC,IAAI,CAACA,MAAM,EAAE;MACd,MAAM,IAAIN,8BAA8B,CAAC,WAAW,EAAE,6BAA6B,CAAC;IACxF;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}